Search.setIndex({"alltitles":{"(Optional) Clustering":[[10,"optional-clustering"]],"Accessing resources":[[22,"accessing-resources"]],"Adding new implementations":[[25,"adding-new-implementations"]],"Adjusting ModelWrapper for AutoML flow":[[16,"adjusting-modelwrapper-for-automl-flow"]],"Anomaly detection model training and deployment on the MAX32690 Evaluation Kit":[[3,null]],"ArgumentsHandler":[[15,"argumentshandler"]],"AutoML":[[15,"automl"]],"AutoML flow mechanism":[[15,"automl-flow-mechanism"]],"AutoML model":[[15,"automl-model"]],"AutoML statistics":[[26,"automl-statistics"]],"Autocompletion for command line interface":[[0,"autocompletion-for-command-line-interface"]],"Automated model comparison":[[9,"automated-model-comparison"]],"Available MessageType values":[[21,"available-messagetype-values"]],"Available TransmissionFlags":[[21,"available-transmissionflags"]],"Average CPU usage":[[27,"average-cpu-usage"]],"Bare-metal IREE runtime simulated using Renode":[[7,null]],"Benchmarking a model using a native framework":[[9,"benchmarking-a-model-using-a-native-framework"]],"Building and evaluating Magic Wand model using TFLite backend":[[5,"building-and-evaluating-magic-wand-model-using-tflite-backend"]],"Building and evaluating Magic Wand model using microTVM backend":[[5,"building-and-evaluating-magic-wand-model-using-microtvm-backend"]],"BytesBasedProtocol":[[21,"bytesbasedprotocol"]],"BytesBasedProtocol implementations":[[21,"bytesbasedprotocol-implementations"]],"CLI commands":[[22,"cli-commands"]],"CPU usage metrics":[[27,"id2"]],"Caching":[[22,"caching"]],"Checksum":[[21,"checksum"]],"Choosing optimal optimization pipeline":[[24,null]],"Class AnomalyDetectionDataset":[[3,"class-anomalydetectiondataset"]],"Classification comparison":[[26,"classification-comparison"]],"Command-line arguments for classes":[[0,"command-line-arguments-for-classes"]],"Commands used":[[26,"commands-used"],[27,"commands-used"]],"Comparing performance and quality of runtimes and models":[[3,"comparing-performance-and-quality-of-runtimes-and-models"]],"Comparing the results":[[5,"comparing-the-results"]],"Comparison":[[11,"comparison"]],"Comparison of GPU runtimes":[[11,"comparison-of-gpu-runtimes"]],"Comparison of inference time, F1 score and model size":[[26,"comparison-of-inference-time-f1-score-and-model-size"]],"Comparison of model inference time, accuracy and size":[[26,"id2"]],"Comparison of workspace.automl-results.1234_3_5.0.measurements.json, workspace.automl-results.1234_12_5.0.measurements.json, workspace.automl-results.1234_21_5.0.measurements.json, workspace.automl-results.1234_29_1.6666666666666665.measurements.json and workspace.automl-results.1234_29_5.0.measurements.json":[[26,"comparison-of-workspace-automl-results-1234-3-5-0-measurements-json-workspace-automl-results-1234-12-5-0-measurements-json-workspace-automl-results-1234-21-5-0-measurements-json-workspace-automl-results-1234-29-1-6666666666666665-measurements-json-and-workspace-automl-results-1234-29-5-0-measurements-json"]],"Compiling a model and running it remotely":[[14,"compiling-a-model-and-running-it-remotely"]],"Creating applications with Kenning":[[17,null]],"Creating the scenario":[[7,"creating-the-scenario"]],"Custom URI schemes":[[22,"custom-uri-schemes"]],"Data flow reporting":[[15,"data-flow-reporting"]],"DataConverter":[[15,"dataconverter"]],"DataProvider":[[15,"dataprovider"]],"Dataset":[[15,"dataset"]],"Dataset preparation":[[1,"dataset-preparation"]],"Deep Learning deployment stack":[[1,null]],"Defining arguments for core classes":[[16,"defining-arguments-for-core-classes"]],"Defining optimization pipelines in Kenning":[[14,null]],"Defining supported output and input types":[[16,"defining-supported-output-and-input-types"]],"Deploy the VAE model with TensorFlow Lite Micro":[[3,"deploy-the-vae-model-with-tensorflow-lite-micro"]],"Deploy the VAE model with microTVM":[[3,"deploy-the-vae-model-with-microtvm"]],"Deployment API overview":[[15,"deployment-api-overview"]],"Detailed metrics comparison":[[26,"detailed-metrics-comparison"]],"Developing Kenning blocks":[[16,null]],"Displaying information about available classes":[[0,"displaying-information-about-available-classes"],[4,null]],"Evaluating models on hardware using Kenning Zephyr Runtime":[[5,null]],"Evaluating the model in Kenning":[[7,"evaluating-the-model-in-kenning"]],"Example communication scenarios":[[21,"example-communication-scenarios"]],"Exceptions counters":[[26,"exceptions-counters"]],"Executed instructions counters":[[26,"executed-instructions-counters"]],"Experiments":[[8,"experiments"],[10,"experiments"]],"Experiments on CPU":[[11,"experiments-on-cpu"]],"Flags":[[21,"flags"]],"Flow control values":[[21,"flow-control-values"]],"From training to deployment":[[1,"from-training-to-deployment"]],"GPU Experiments":[[11,"gpu-experiments"]],"General information for build.local-cpu-tvm-tensorflow-classification.json":[[27,"general-information-for-build-local-cpu-tvm-tensorflow-classification-json"]],"General information for workspace.automl-results.1234_12_5.0.measurements.json":[[26,"general-information-for-workspace-automl-results-1234-12-5-0-measurements-json"]],"General information for workspace.automl-results.1234_21_5.0.measurements.json":[[26,"general-information-for-workspace-automl-results-1234-21-5-0-measurements-json"]],"General information for workspace.automl-results.1234_29_1.6666666666666665.measurements.json":[[26,"general-information-for-workspace-automl-results-1234-29-1-6666666666666665-measurements-json"]],"General information for workspace.automl-results.1234_29_5.0.measurements.json":[[26,"general-information-for-workspace-automl-results-1234-29-5-0-measurements-json"]],"General information for workspace.automl-results.1234_3_5.0.measurements.json":[[26,"general-information-for-workspace-automl-results-1234-3-5-0-measurements-json"]],"Generating anomaly detection models for the MAX32690 Evaluation Kit with AutoML":[[2,null]],"Generating definitions for boards supported by Zephyr RTOS":[[20,"generating-definitions-for-boards-supported-by-zephyr-rtos"]],"Generating performance reports":[[0,"generating-performance-reports"]],"I/O data flow":[[15,"i-o-data-flow"]],"IO compatibility":[[17,"io-compatibility"]],"IO names and mapping":[[17,"io-names-and-mapping"]],"IO non-standard types":[[17,"io-non-standard-types"]],"Implemented Runners":[[17,"implemented-runners"]],"Implementing Kenning runtime blocks":[[16,"implementing-kenning-runtime-blocks"]],"Implementing a ModelWrapper":[[16,"implementing-a-modelwrapper"]],"Implementing a new Kenning component":[[16,"implementing-a-new-kenning-component"]],"Implementing new Runners for KenningFlow":[[16,"implementing-new-runners-for-kenningflow"]],"Implementing unimplemented methods":[[16,"implementing-unimplemented-methods"]],"In-framework inference performance measurements":[[0,"in-framework-inference-performance-measurements"]],"Inference comparison":[[26,"inference-comparison"]],"Inference performance metrics for build.local-cpu-tvm-tensorflow-classification.json":[[27,"inference-performance-metrics-for-build-local-cpu-tvm-tensorflow-classification-json"]],"Inference quality metrics":[[27,"id4"]],"Inference quality metrics for build.local-cpu-tvm-tensorflow-classification.json":[[27,"inference-quality-metrics-for-build-local-cpu-tvm-tensorflow-classification-json"]],"Inference time":[[27,"inference-time"]],"Inference time metrics":[[27,"id1"]],"Info":[[11,null]],"Install software necessary for flashing the MAX32690 Evaluation Kit":[[3,"install-software-necessary-for-flashing-the-max32690-evaluation-kit"]],"Installing Kenning with Renode support":[[5,"installing-kenning-with-renode-support"]],"Installing Pipeline Manager":[[6,"installing-pipeline-manager"]],"Introduction":[[13,null],[25,"introduction"]],"JSON specification":[[14,"json-specification"]],"JSON structure":[[17,"json-structure"]],"KENNING_CACHE_DIR":[[23,"kenning-cache-dir"]],"KENNING_DISABLE_IO_VALIDATION":[[23,"kenning-disable-io-validation"]],"KENNING_DOCS_VENV":[[23,"kenning-docs-venv"]],"KENNING_ENABLE_ALL_LOGS":[[23,"kenning-enable-all-logs"]],"KENNING_MAX_CACHE_SIZE":[[23,"kenning-max-cache-size"]],"KENNING_USE_DEFAULT_EXCEPTHOOK":[[23,"kenning-use-default-excepthook"]],"Kenning":[[12,null],[25,null]],"Kenning API":[[15,null]],"Kenning environment variables":[[23,null]],"Kenning gallery of use cases":[[18,null]],"Kenning info":[[4,"kenning-info"]],"Kenning installation":[[25,"kenning-installation"]],"Kenning list":[[4,"kenning-list"]],"Kenning measurements":[[19,null]],"Kenning platforms":[[20,null]],"Kenning protocols":[[21,null]],"Kenning resources":[[22,null]],"Kenning structure":[[25,"kenning-structure"]],"Kenning tutorials":[[25,"kenning-tutorials"]],"Kenning usage":[[25,"kenning-usage"]],"KenningFlow":[[15,"kenningflow"]],"KenningFlow execution":[[17,"kenningflow-execution"]],"KenningProtocol":[[21,"kenningprotocol"]],"KenningProtocol implementations":[[21,"kenningprotocol-implementations"]],"Loading a class with arguments":[[4,"loading-a-class-with-arguments"]],"Mean comparison plots":[[26,"mean-comparison-plots"]],"Measurements":[[15,"measurements"]],"Memory access counters":[[26,"memory-access-counters"]],"Memory usage":[[27,"memory-usage"]],"Memory usage metrics":[[27,"id3"]],"Message structure":[[21,"message-structure"]],"Methods":[[21,"methods"],[21,"id1"],[21,"id2"],[21,"id3"]],"Model and I/O metadata":[[16,"model-and-i-o-metadata"]],"Model compilation and deployment":[[1,"model-compilation-and-deployment"]],"Model evaluation using its native framework":[[14,"model-evaluation-using-its-native-framework"]],"Model optimization":[[1,"model-optimization"]],"Model preparation and training":[[1,"model-preparation-and-training"]],"Model processing":[[15,"model-processing"]],"Model quantization and compilation using TFLite and TVM":[[9,null]],"Model training":[[0,"model-training"],[14,"model-training"]],"ModelWrapper":[[15,"modelwrapper"]],"Module description":[[3,"module-description"]],"Module installation with pip":[[25,"module-installation-with-pip"]],"NetworkProtocol":[[21,"networkprotocol"]],"Note":[[0,null],[0,null],[0,null],[2,null],[2,null],[2,null],[2,null],[3,null],[3,null],[3,null],[3,null],[3,null],[4,null],[14,null],[14,null],[14,null],[15,null],[16,null],[17,null],[20,null],[21,null],[21,null],[26,null],[27,null]],"ONNX Runtime execution of model":[[11,"onnx-runtime-execution-of-model"]],"ONNX optimization":[[11,"onnx-optimization"]],"ONNXConversion":[[15,"onnxconversion"]],"Open for instructions on building TVM with CUDA enabled":[[11,null]],"Open for instructions on installing ONNX Runtime with CUDA enabled":[[11,null]],"Optimization config specification":[[24,"optimization-config-specification"]],"Optimizer":[[15,"optimizer"]],"Optimizing a model using TensorFlow Lite":[[9,"optimizing-a-model-using-tensorflow-lite"]],"Optimizing and comparing instance segmentation models":[[11,null]],"Optimizing and running a model on a single device":[[14,"optimizing-and-running-a-model-on-a-single-device"]],"Output details":[[24,"output-details"]],"OutputCollector":[[15,"outputcollector"]],"Payload size":[[21,"payload-size"]],"Performance metric for models":[[26,"id5"]],"Performance metrics":[[19,"performance-metrics"],[26,"performance-metrics"]],"Peripheral access counters":[[26,"peripheral-access-counters"]],"Pet Dataset classification using TVM-compiled TensorFlow model":[[27,"pet-dataset-classification-using-tvm-compiled-tensorflow-model"]],"Platform":[[15,"platform"]],"Prepare an environment for development":[[2,"prepare-an-environment-for-development"],[3,"prepare-an-environment-for-development"]],"Prepare environment":[[9,"prepare-environment"]],"Preparing the Zephyr environment":[[5,"preparing-the-zephyr-environment"]],"Protocol":[[15,"protocol"]],"Protocol implementations":[[15,"protocol-implementations"]],"Protocol methods":[[15,"protocol-methods"]],"Protocol specification":[[21,"protocol-specification"]],"Quantizing a model using TensorFlow Lite":[[9,"quantizing-a-model-using-tensorflow-lite"]],"ROS2Protocol":[[21,"ros2protocol"]],"Renode performance measurements":[[26,"renode-performance-measurements"]],"ResourceManager":[[15,"resourcemanager"]],"ResourceURI":[[15,"resourceuri"]],"Results":[[8,"results"]],"Run AutoML flow":[[2,"run-automl-flow"]],"Run AutoML flow with quantization":[[2,"run-automl-flow-with-quantization"]],"Run sample app with a chosen model":[[2,"run-sample-app-with-a-chosen-model"]],"Runner":[[15,"runner"]],"Runner IO":[[17,"runner-io"]],"Running Kenning":[[25,"running-kenning"]],"Running Pipeline Manager with Kenning":[[6,"running-pipeline-manager-with-kenning"]],"Running inference":[[0,"running-inference"]],"Running the scenario":[[7,"running-the-scenario"]],"Runtime":[[15,"runtime"]],"Runtime example":[[17,"runtime-example"]],"Sample AutoML report":[[26,null]],"Sample autogenerated report":[[27,null]],"Server callbacks":[[15,"server-callbacks"]],"Setup":[[7,"setup"],[8,"setup"],[10,"setup"],[11,"setup"]],"Specification":[[20,"specification"]],"Specification of the kenning.datasets.anomaly_detection_dataset module":[[3,"specification-of-the-kenning-datasets-anomaly-detection-dataset-module"]],"Speeding up inference with Apache TVM":[[9,"speeding-up-inference-with-apache-tvm"]],"Structured pruning for PyTorch models":[[8,null]],"Summary of classification metrics for models":[[26,"id3"]],"Summary of generated models":[[26,"summary-of-generated-models"]],"Summary of generated models\u2019 parameters":[[26,"id1"]],"Summary of inference time metrics for models":[[26,"id4"]],"TVM optimization":[[11,"tvm-optimization"],[11,"id1"]],"Testing inference on target hardware":[[0,"testing-inference-on-target-hardware"]],"Train the model (optional)":[[9,"train-the-model-optional"]],"Train the sample anomaly detection model (optional)":[[3,"train-the-sample-anomaly-detection-model-optional"]],"Training overview":[[26,"training-overview"]],"UARTProtocol":[[21,"uartprotocol"]],"Unstructured Pruning of TensorFlow Models":[[10,null]],"Using Kenning as a library in Python scripts":[[25,"using-kenning-as-a-library-in-python-scripts"]],"Using Kenning via command line arguments":[[0,null]],"Using Pipeline Manager":[[6,"using-pipeline-manager"]],"Using the implemented block":[[16,"using-the-implemented-block"]],"Using the implemented model":[[16,"using-the-implemented-model"]],"Visualizing Kenning data flows with Pipeline Manager":[[6,null]],"Warning":[[15,null],[16,null]],"Working directly with the repository":[[25,"working-directly-with-the-repository"]]},"docurls":["cmd-usage.html","dl-deployment-stack.html","gallery/anomaly-detection-automl.html","gallery/anomaly-detection-on-mcu.html","gallery/displaying-information-example.html","gallery/kenning-zephyr-runtime.html","gallery/pipeline-manager-example.html","gallery/renode-integration-example.html","gallery/structured-pruning-torch.html","gallery/tflite-tvm.html","gallery/unstructured-pruning-tensorflow.html","gallery/yolact-object-detection-comparison.html","index.html","introduction.html","json-scenarios.html","kenning-api.html","kenning-development.html","kenning-flow.html","kenning-gallery.html","kenning-measurements.html","kenning-platforms.html","kenning-protocols.html","kenning-resources.html","kenning-variables.html","pipeline-optimizer.html","project-readme.html","sample-automl-report.html","sample-report.html"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.todo":2},"indexentries":{"_dataindex (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset._dataindex",false]],"accept_client() (kenning.protocols.network.networkprotocol method)":[[21,"kenning.protocols.network.NetworkProtocol.accept_client",false]],"accumulate() (kenning.core.measurements.measurements method)":[[15,"kenning.core.measurements.Measurements.accumulate",false]],"add_custom_url_schemes() (kenning.utils.resource_manager.resourcemanager method)":[[15,"kenning.utils.resource_manager.ResourceManager.add_custom_url_schemes",false]],"add_entry() (kenning.core.onnxconversion.onnxconversion method)":[[15,"kenning.core.onnxconversion.ONNXConversion.add_entry",false]],"add_measurement() (kenning.core.measurements.measurements method)":[[15,"kenning.core.measurements.Measurements.add_measurement",false]],"argumentshandler (class in kenning.utils.args_manager)":[[15,"kenning.utils.args_manager.ArgumentsHandler",false]],"automl (class in kenning.core.automl)":[[15,"kenning.core.automl.AutoML",false]],"automlmodel (class in kenning.core.automl)":[[15,"kenning.core.automl.AutoMLModel",false]],"batch_size (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.batch_size",false]],"bytesbasedprotocol (class in kenning.protocols.bytes_based_protocol)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol",false]],"calibration_dataset_generator() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.calibration_dataset_generator",false]],"check_conversions() (kenning.core.onnxconversion.onnxconversion method)":[[15,"kenning.core.onnxconversion.ONNXConversion.check_conversions",false]],"check_status() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.check_status",false]],"cleanup() (kenning.core.runner.runner method)":[[15,"kenning.core.runner.Runner.cleanup",false]],"clear() (kenning.core.measurements.measurements method)":[[15,"kenning.core.measurements.Measurements.clear",false]],"clear() (kenning.core.measurements.measurementscollector class method)":[[15,"kenning.core.measurements.MeasurementsCollector.clear",false]],"clear_cache() (kenning.utils.resource_manager.resourcemanager method)":[[15,"kenning.utils.resource_manager.ResourceManager.clear_cache",false]],"compile() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.compile",false]],"consult_model_type() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.consult_model_type",false]],"convert_input_to_bytes() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.convert_input_to_bytes",false]],"convert_output_from_bytes() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.convert_output_from_bytes",false]],"copy() (kenning.core.measurements.measurements method)":[[15,"kenning.core.measurements.Measurements.copy",false]],"data (kenning.core.measurements.measurements attribute)":[[15,"kenning.core.measurements.Measurements.data",false]],"dataconverter (class in kenning.core.dataconverter)":[[15,"kenning.core.dataconverter.DataConverter",false]],"dataprovider (class in kenning.core.dataprovider)":[[15,"kenning.core.dataprovider.DataProvider",false]],"dataset (class in kenning.core.dataset)":[[15,"kenning.core.dataset.Dataset",false]],"datax (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.dataX",false]],"dataxtest (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.dataXtest",false]],"dataxtrain (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.dataXtrain",false]],"dataxval (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.dataXval",false]],"datay (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.dataY",false]],"dataytest (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.dataYtest",false]],"dataytrain (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.dataYtrain",false]],"datayval (kenning.core.dataset.dataset attribute)":[[15,"kenning.core.dataset.Dataset.dataYval",false]],"deinit() (kenning.core.platform.platform method)":[[15,"kenning.core.platform.Platform.deinit",false]],"derive_io_spec_from_json_params() (kenning.core.model.modelwrapper class method)":[[15,"kenning.core.model.ModelWrapper.derive_io_spec_from_json_params",false]],"detach_from_output() (kenning.core.outputcollector.outputcollector method)":[[15,"kenning.core.outputcollector.OutputCollector.detach_from_output",false]],"detach_from_source() (kenning.core.dataprovider.dataprovider method)":[[15,"kenning.core.dataprovider.DataProvider.detach_from_source",false]],"disconnect() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.disconnect",false]],"disconnect() (kenning.protocols.network.networkprotocol method)":[[21,"kenning.protocols.network.NetworkProtocol.disconnect",false]],"download_dataset_fun() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.download_dataset_fun",false]],"download_output() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.download_output",false]],"download_output() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.download_output",false]],"download_statistics() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.download_statistics",false]],"download_statistics() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.download_statistics",false]],"evaluate() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.evaluate",false]],"event_active() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.event_active",false]],"event_active() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.event_active",false]],"extract_model() (kenning.core.automl.automlmodel method)":[[15,"kenning.core.automl.AutoMLModel.extract_model",false]],"extract_output() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.extract_output",false]],"fetch_input() (kenning.core.dataprovider.dataprovider method)":[[15,"kenning.core.dataprovider.DataProvider.fetch_input",false]],"finish_action() (kenning.core.protocol.serverstatus method)":[[15,"kenning.core.protocol.ServerStatus.finish_action",false]],"finish_event() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.finish_event",false]],"form_argparse() (kenning.utils.args_manager.argumentshandler class method)":[[15,"kenning.utils.args_manager.ArgumentsHandler.form_argparse",false]],"form_automl_schema() (kenning.core.automl.automlmodel class method)":[[15,"kenning.core.automl.AutoMLModel.form_automl_schema",false]],"form_parameterschema() (kenning.core.flow.kenningflow class method)":[[15,"kenning.core.flow.KenningFlow.form_parameterschema",false]],"form_parameterschema() (kenning.utils.args_manager.argumentshandler class method)":[[15,"kenning.utils.args_manager.ArgumentsHandler.form_parameterschema",false]],"from_argparse() (kenning.core.automl.automl class method)":[[15,"kenning.core.automl.AutoML.from_argparse",false]],"from_argparse() (kenning.core.dataset.dataset class method)":[[15,"kenning.core.dataset.Dataset.from_argparse",false]],"from_argparse() (kenning.core.model.modelwrapper class method)":[[15,"kenning.core.model.ModelWrapper.from_argparse",false]],"from_argparse() (kenning.core.optimizer.optimizer class method)":[[15,"kenning.core.optimizer.Optimizer.from_argparse",false]],"from_argparse() (kenning.core.protocol.protocol class method)":[[15,"kenning.core.protocol.Protocol.from_argparse",false]],"from_argparse() (kenning.core.runner.runner class method)":[[15,"kenning.core.runner.Runner.from_argparse",false]],"from_argparse() (kenning.core.runtime.runtime class method)":[[15,"kenning.core.runtime.Runtime.from_argparse",false]],"from_argparse() (kenning.utils.args_manager.argumentshandler class method)":[[15,"kenning.utils.args_manager.ArgumentsHandler.from_argparse",false]],"from_json() (kenning.core.automl.automl class method)":[[15,"kenning.core.automl.AutoML.from_json",false]],"from_json() (kenning.core.dataset.dataset class method)":[[15,"kenning.core.dataset.Dataset.from_json",false]],"from_json() (kenning.core.flow.kenningflow class method)":[[15,"kenning.core.flow.KenningFlow.from_json",false]],"from_json() (kenning.core.model.modelwrapper class method)":[[15,"kenning.core.model.ModelWrapper.from_json",false]],"from_json() (kenning.core.optimizer.optimizer class method)":[[15,"kenning.core.optimizer.Optimizer.from_json",false]],"from_json() (kenning.core.protocol.protocol class method)":[[15,"kenning.core.protocol.Protocol.from_json",false]],"from_json() (kenning.core.runner.runner class method)":[[15,"kenning.core.runner.Runner.from_json",false]],"from_json() (kenning.core.runtime.runtime class method)":[[15,"kenning.core.runtime.Runtime.from_json",false]],"from_json() (kenning.utils.args_manager.argumentshandler class method)":[[15,"kenning.utils.args_manager.ArgumentsHandler.from_json",false]],"gather_data() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.gather_data",false]],"get_available_ram() (kenning.core.runtime.runtime static method)":[[15,"kenning.core.runtime.Runtime.get_available_ram",false]],"get_best_configs() (kenning.core.automl.automl method)":[[15,"kenning.core.automl.AutoML.get_best_configs",false]],"get_class_names() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.get_class_names",false]],"get_data() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.get_data",false]],"get_data_unloaded() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.get_data_unloaded",false]],"get_default_protocol() (kenning.core.platform.platform method)":[[15,"kenning.core.platform.Platform.get_default_protocol",false]],"get_framework_and_version() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.get_framework_and_version",false]],"get_framework_and_version() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.get_framework_and_version",false]],"get_input_formats() (kenning.core.optimizer.optimizer class method)":[[15,"kenning.core.optimizer.Optimizer.get_input_formats",false]],"get_input_formats() (kenning.core.runtime.runtime class method)":[[15,"kenning.core.runtime.Runtime.get_input_formats",false]],"get_input_mean_std() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.get_input_mean_std",false]],"get_input_type() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.get_input_type",false]],"get_io_spec_path() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.get_io_spec_path",false]],"get_io_specification() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.get_io_specification",false]],"get_io_specification_from_model() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.get_io_specification_from_model",false]],"get_measurements() (kenning.core.measurements.systemstatscollector method)":[[15,"kenning.core.measurements.SystemStatsCollector.get_measurements",false]],"get_model_size() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.get_model_size",false]],"get_optimized_model_size() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.get_optimized_model_size",false]],"get_output_formats() (kenning.core.model.modelwrapper class method)":[[15,"kenning.core.model.ModelWrapper.get_output_formats",false]],"get_output_formats() (kenning.core.optimizer.optimizer class method)":[[15,"kenning.core.optimizer.Optimizer.get_output_formats",false]],"get_path() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.get_path",false]],"get_resource() (kenning.utils.resource_manager.resourcemanager method)":[[15,"kenning.utils.resource_manager.ResourceManager.get_resource",false]],"get_spec_path() (kenning.core.optimizer.optimizer static method)":[[15,"kenning.core.optimizer.Optimizer.get_spec_path",false]],"get_statistics() (kenning.core.automl.automl method)":[[15,"kenning.core.automl.AutoML.get_statistics",false]],"get_time() (kenning.core.platform.platform method)":[[15,"kenning.core.platform.Platform.get_time",false]],"get_time() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.get_time",false]],"get_values() (kenning.core.measurements.measurements method)":[[15,"kenning.core.measurements.Measurements.get_values",false]],"infer() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.infer",false]],"inference_session_end() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.inference_session_end",false]],"inference_session_start() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.inference_session_start",false]],"inference_step_callback() (kenning.core.platform.platform method)":[[15,"kenning.core.platform.Platform.inference_step_callback",false]],"init() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.init",false]],"init() (kenning.core.platform.platform method)":[[15,"kenning.core.platform.Platform.init",false]],"initialize_client() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.initialize_client",false]],"initialize_client() (kenning.protocols.network.networkprotocol method)":[[21,"kenning.protocols.network.NetworkProtocol.initialize_client",false]],"initialize_measurement() (kenning.core.measurements.measurements method)":[[15,"kenning.core.measurements.Measurements.initialize_measurement",false]],"initialize_server() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.initialize_server",false]],"initialize_server() (kenning.protocols.network.networkprotocol method)":[[21,"kenning.protocols.network.NetworkProtocol.initialize_server",false]],"iter_test() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.iter_test",false]],"iter_train() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.iter_train",false]],"iter_val() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.iter_val",false]],"kenning.core.measurements":[[15,"module-kenning.core.measurements",false]],"kenningflow (class in kenning.core.flow)":[[15,"kenning.core.flow.KenningFlow",false]],"kenningprotocol (class in kenning.protocols.kenning_protocol)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol",false]],"kill_event() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.kill_event",false]],"kill_event() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.kill_event",false]],"list_cached_files() (kenning.utils.resource_manager.resourcemanager method)":[[15,"kenning.utils.resource_manager.ResourceManager.list_cached_files",false]],"listen() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.listen",false]],"listen() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.listen",false]],"listen_blocking() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.listen_blocking",false]],"listen_blocking() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.listen_blocking",false]],"listen_to_server_logs() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.listen_to_server_logs",false]],"listen_to_server_logs() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.listen_to_server_logs",false]],"load_input() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.load_input",false]],"load_input_from_bytes() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.load_input_from_bytes",false]],"load_io_specification() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.load_io_specification",false]],"load_model() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.load_model",false]],"measurements (class in kenning.core.measurements)":[[15,"kenning.core.measurements.Measurements",false]],"measurementscollector (class in kenning.core.measurements)":[[15,"kenning.core.measurements.MeasurementsCollector",false]],"modelwrapper (class in kenning.core.model)":[[15,"kenning.core.model.ModelWrapper",false]],"module":[[15,"module-kenning.core.measurements",false]],"networkprotocol (class in kenning.protocols.network)":[[21,"kenning.protocols.network.NetworkProtocol",false]],"onnx_export() (kenning.core.onnxconversion.onnxconversion method)":[[15,"kenning.core.onnxconversion.ONNXConversion.onnx_export",false]],"onnx_import() (kenning.core.onnxconversion.onnxconversion method)":[[15,"kenning.core.onnxconversion.ONNXConversion.onnx_import",false]],"onnxconversion (class in kenning.core.onnxconversion)":[[15,"kenning.core.onnxconversion.ONNXConversion",false]],"optimizer (class in kenning.core.optimizer)":[[15,"kenning.core.optimizer.Optimizer",false]],"origin (kenning.utils.resource_manager.resourceuri property)":[[15,"kenning.utils.resource_manager.ResourceURI.origin",false]],"outputcollector (class in kenning.core.outputcollector)":[[15,"kenning.core.outputcollector.OutputCollector",false]],"parent (kenning.utils.resource_manager.resourceuri property)":[[15,"kenning.utils.resource_manager.ResourceURI.parent",false]],"parse_io_specification_from_json() (kenning.core.model.modelwrapper class method)":[[15,"kenning.core.model.ModelWrapper.parse_io_specification_from_json",false]],"platform (class in kenning.core.platform)":[[15,"kenning.core.platform.Platform",false]],"postprocess_outputs() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.postprocess_outputs",false]],"prepare() (kenning.core.dataprovider.dataprovider method)":[[15,"kenning.core.dataprovider.DataProvider.prepare",false]],"prepare() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.prepare",false]],"prepare() (kenning.core.onnxconversion.onnxconversion method)":[[15,"kenning.core.onnxconversion.ONNXConversion.prepare",false]],"prepare_external_calibration_dataset() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.prepare_external_calibration_dataset",false]],"prepare_framework() (kenning.core.automl.automl method)":[[15,"kenning.core.automl.AutoML.prepare_framework",false]],"prepare_input_samples() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.prepare_input_samples",false]],"prepare_io_specification() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.prepare_io_specification",false]],"prepare_local() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.prepare_local",false]],"prepare_model() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.prepare_model",false]],"prepare_model() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.prepare_model",false]],"prepare_output_samples() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.prepare_output_samples",false]],"preprocess_input() (kenning.core.dataprovider.dataprovider method)":[[15,"kenning.core.dataprovider.DataProvider.preprocess_input",false]],"preprocess_input() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.preprocess_input",false]],"preprocess_model_to_upload() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.preprocess_model_to_upload",false]],"process_output() (kenning.core.outputcollector.outputcollector method)":[[15,"kenning.core.outputcollector.OutputCollector.process_output",false]],"protocol (class in kenning.core.protocol)":[[15,"kenning.core.protocol.Protocol",false]],"read_data_from_platforms_yaml() (kenning.core.platform.platform method)":[[15,"kenning.core.platform.Platform.read_data_from_platforms_yaml",false]],"read_io_specification() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.read_io_specification",false]],"read_platform() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.read_platform",false]],"read_platform() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.read_platform",false]],"receive_data() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.receive_data",false]],"receive_data() (kenning.protocols.network.networkprotocol method)":[[21,"kenning.protocols.network.NetworkProtocol.receive_data",false]],"receive_message() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.receive_message",false]],"receiver() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.receiver",false]],"request() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request",false]],"request() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.request",false]],"request_blocking() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_blocking",false]],"request_blocking() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.request_blocking",false]],"request_optimization() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.request_optimization",false]],"request_optimization() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_optimization",false]],"request_processing() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.request_processing",false]],"request_processing() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_processing",false]],"resourcemanager (class in kenning.utils.resource_manager)":[[15,"kenning.utils.resource_manager.ResourceManager",false]],"resourceuri (class in kenning.utils.resource_manager)":[[15,"kenning.utils.resource_manager.ResourceURI",false]],"run() (kenning.core.flow.kenningflow method)":[[15,"kenning.core.flow.KenningFlow.run",false]],"run() (kenning.core.measurements.systemstatscollector method)":[[15,"kenning.core.measurements.SystemStatsCollector.run",false]],"run() (kenning.core.runner.runner method)":[[15,"kenning.core.runner.Runner.run",false]],"run() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.run",false]],"run_event() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.run_event",false]],"run_event_blocking() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.run_event_blocking",false]],"run_inference() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.run_inference",false]],"run_single_step() (kenning.core.flow.kenningflow method)":[[15,"kenning.core.flow.KenningFlow.run_single_step",false]],"runner (class in kenning.core.runner)":[[15,"kenning.core.runner.Runner",false]],"runtime (class in kenning.core.runtime)":[[15,"kenning.core.runtime.Runtime",false]],"save_dataset_checksum() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.save_dataset_checksum",false]],"save_io_specification() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.save_io_specification",false]],"save_measurements() (kenning.core.measurements.measurementscollector class method)":[[15,"kenning.core.measurements.MeasurementsCollector.save_measurements",false]],"save_model() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.save_model",false]],"save_to_onnx() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.save_to_onnx",false]],"search() (kenning.core.automl.automl method)":[[15,"kenning.core.automl.AutoML.search",false]],"send_data() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.send_data",false]],"send_data() (kenning.protocols.network.networkprotocol method)":[[21,"kenning.protocols.network.NetworkProtocol.send_data",false]],"send_message() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.send_message",false]],"send_messages() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.send_messages",false]],"serve() (in module kenning.core.protocol.protocol)":[[15,"kenning.core.protocol.Protocol.serve",false]],"serve() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.serve",false]],"serve() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.serve",false]],"serverstatus (class in kenning.core.protocol)":[[15,"kenning.core.protocol.ServerStatus",false]],"set_batch_size() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.set_batch_size",false]],"set_cache_dir() (kenning.utils.resource_manager.resourcemanager method)":[[15,"kenning.utils.resource_manager.ResourceManager.set_cache_dir",false]],"set_compiled_model_path() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.set_compiled_model_path",false]],"set_input_type() (kenning.core.optimizer.optimizer method)":[[15,"kenning.core.optimizer.Optimizer.set_input_type",false]],"set_max_cache_size() (kenning.utils.resource_manager.resourcemanager method)":[[15,"kenning.utils.resource_manager.ResourceManager.set_max_cache_size",false]],"set_unoptimized() (kenning.core.measurements.measurementscollector class method)":[[15,"kenning.core.measurements.MeasurementsCollector.set_unoptimized",false]],"should_close() (kenning.core.outputcollector.outputcollector method)":[[15,"kenning.core.outputcollector.OutputCollector.should_close",false]],"should_close() (kenning.core.runner.runner method)":[[15,"kenning.core.runner.Runner.should_close",false]],"start() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.start",false]],"start_action() (kenning.core.protocol.serverstatus method)":[[15,"kenning.core.protocol.ServerStatus.start_action",false]],"start_sending_logs() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.start_sending_logs",false]],"start_sending_logs() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.start_sending_logs",false]],"stop() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.stop",false]],"stop_sending_logs() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.stop_sending_logs",false]],"stop_sending_logs() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.stop_sending_logs",false]],"systemstatscollector (class in kenning.core.measurements)":[[15,"kenning.core.measurements.SystemStatsCollector",false]],"systemstatsmeasurements() (in module kenning.core.measurements)":[[15,"kenning.core.measurements.systemstatsmeasurements",false]],"tagmeasurements() (in module kenning.core.measurements)":[[15,"kenning.core.measurements.tagmeasurements",false]],"test_inference() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.test_inference",false]],"test_subset_len() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.test_subset_len",false]],"timemeasurements() (in module kenning.core.measurements)":[[15,"kenning.core.measurements.timemeasurements",false]],"to_json() (kenning.utils.args_manager.argumentshandler method)":[[15,"kenning.utils.args_manager.ArgumentsHandler.to_json",false]],"to_next_block() (kenning.core.dataconverter.dataconverter method)":[[15,"kenning.core.dataconverter.DataConverter.to_next_block",false]],"to_previous_block() (kenning.core.dataconverter.dataconverter method)":[[15,"kenning.core.dataconverter.DataConverter.to_previous_block",false]],"train_model() (kenning.core.model.modelwrapper method)":[[15,"kenning.core.model.ModelWrapper.train_model",false]],"train_subset_len() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.train_subset_len",false]],"train_test_split_representations() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.train_test_split_representations",false]],"transmit() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.transmit",false]],"transmit() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.transmit",false]],"transmit_blocking() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.transmit_blocking",false]],"transmit_blocking() (kenning.protocols.kenning_protocol.kenningprotocol method)":[[21,"kenning.protocols.kenning_protocol.KenningProtocol.transmit_blocking",false]],"update_automl_defaults() (kenning.core.automl.automlmodel static method)":[[15,"kenning.core.automl.AutoMLModel.update_automl_defaults",false]],"update_automl_range() (kenning.core.automl.automlmodel class method)":[[15,"kenning.core.automl.AutoMLModel.update_automl_range",false]],"update_measurements() (kenning.core.measurements.measurements method)":[[15,"kenning.core.measurements.Measurements.update_measurements",false]],"upload_input() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.upload_input",false]],"upload_input() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_input",false]],"upload_io_specification() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.upload_io_specification",false]],"upload_io_specification() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_io_specification",false]],"upload_model() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.upload_model",false]],"upload_model() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_model",false]],"upload_optimizers() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.upload_optimizers",false]],"upload_optimizers() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_optimizers",false]],"upload_output() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.upload_output",false]],"upload_runtime() (kenning.core.protocol.protocol method)":[[15,"kenning.core.protocol.Protocol.upload_runtime",false]],"upload_runtime() (kenning.protocols.bytes_based_protocol.bytesbasedprotocol method)":[[21,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_runtime",false]],"upload_stats() (kenning.core.runtime.runtime method)":[[15,"kenning.core.runtime.Runtime.upload_stats",false]],"uri (kenning.utils.resource_manager.resourceuri property)":[[15,"kenning.utils.resource_manager.ResourceURI.uri",false]],"val_subset_len() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.val_subset_len",false]],"validate_resources_version() (kenning.utils.resource_manager.resourcemanager method)":[[15,"kenning.utils.resource_manager.ResourceManager.validate_resources_version",false]],"verify_dataset_checksum() (kenning.core.dataset.dataset method)":[[15,"kenning.core.dataset.Dataset.verify_dataset_checksum",false]],"wait_send() (kenning.protocols.network.networkprotocol method)":[[21,"kenning.protocols.network.NetworkProtocol.wait_send",false]],"with_name() (kenning.utils.resource_manager.resourceuri method)":[[15,"kenning.utils.resource_manager.ResourceURI.with_name",false]],"with_stem() (kenning.utils.resource_manager.resourceuri method)":[[15,"kenning.utils.resource_manager.ResourceURI.with_stem",false]],"with_suffix() (kenning.utils.resource_manager.resourceuri method)":[[15,"kenning.utils.resource_manager.ResourceURI.with_suffix",false]]},"objects":{"kenning.core":[[15,4,0,1,"measurements",""]],"kenning.core.automl":[[15,0,1,0,"AutoML","Bases: ArgumentsHandler, ABC"],[15,0,1,0,"AutoMLModel","Bases: ArgumentsHandler, ABC"]],"kenning.core.automl.AutoML":[[15,2,1,0,"from_argparse","Constructor wrapper that takes the parameters from argparse args."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"get_best_configs","Extracts the best models and returns Kenning configuration for them."],[15,2,1,0,"get_statistics","Returns statistic of the AutoML flow, like number of successful or crashed runs."],[15,2,1,0,"prepare_framework","Prepares AutoML framework."],[15,2,1,0,"search","Runs AutoML search."]],"kenning.core.automl.AutoML.__init__":[[15,1,2,"kenning.core.automl.AutoML","application_size","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","callback_max_samples","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","dataset","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","n_best_models","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","optimize_metric","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","optimizers","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","output_directory","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","platform","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","runtime","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","seed","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","skip_model_size_check","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","time_limit","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.automl.AutoML","use_models","Bases: ArgumentsHandler, ABC"]],"kenning.core.automl.AutoML.from_argparse":[[15,1,2,0,"args","Arguments from ArgumentParser object."],[15,1,2,0,"dataset","The dataset object that is optionally used for optimization."],[15,1,2,0,"platform","The platform on which generated models will be evaluated."]],"kenning.core.automl.AutoML.from_json":[[15,1,2,0,"dataset","The dataset object that is optionally used for optimization."],[15,1,2,0,"json_dict","Arguments for the constructor."],[15,1,2,0,"optimizers","The optional list with optimizers."],[15,1,2,0,"platform","The platform on which generated models will be evaluated."]],"kenning.core.automl.AutoMLModel":[[15,2,1,0,"extract_model","Extracts model from AutoML object."],[15,2,1,0,"form_automl_schema","Gathers AutoML schema based on arguments_structure of class and all parent."],[15,2,1,0,"update_automl_defaults","Updates the default value of the AutoML parameter to make sure they fit into ranges."],[15,2,1,0,"update_automl_range","Updates the ranges of AutoML parameters."]],"kenning.core.automl.AutoMLModel.extract_model":[[15,1,2,0,"network","AutoML object with optimized model."]],"kenning.core.automl.AutoMLModel.update_automl_defaults":[[15,1,2,0,"arg_structure","The combined arguments structure of current class and its parents."],[15,1,2,0,"name","The name of parameter, should match with the arguments_structure."]],"kenning.core.automl.AutoMLModel.update_automl_range":[[15,1,2,0,"conf","The dictionary with new parameters configuration."],[15,1,2,0,"name","The name of parameter, should match with the arguments_structure."]],"kenning.core.dataconverter":[[15,0,1,0,"DataConverter","Bases: ArgumentsHandler, ABC"]],"kenning.core.dataconverter.DataConverter":[[15,2,1,0,"to_next_block","Converts data to the format used by the surrounding block."],[15,2,1,0,"to_previous_block","Converts data from the format used by the surrounding block to one previous block expects."]],"kenning.core.dataconverter.DataConverter.to_next_block":[[15,1,2,0,"data","Data to be converted."]],"kenning.core.dataconverter.DataConverter.to_previous_block":[[15,1,2,0,"data","Data to be converted."]],"kenning.core.dataprovider":[[15,0,1,0,"DataProvider","Bases: Runner, ABC"]],"kenning.core.dataprovider.DataProvider":[[15,2,1,0,"detach_from_source","Detaches from the source during shutdown."],[15,2,1,0,"fetch_input","Gets the sample from device."],[15,2,1,0,"prepare","Prepares the source for data gathering depending on the source type."],[15,2,1,0,"preprocess_input","Performs provider-specific preprocessing of inputs."]],"kenning.core.dataprovider.DataProvider.__init__":[[15,1,2,"kenning.core.dataprovider.DataProvider","inputs_sources","Bases: Runner, ABC"],[15,1,2,"kenning.core.dataprovider.DataProvider","inputs_specs","Bases: Runner, ABC"],[15,1,2,"kenning.core.dataprovider.DataProvider","outputs","Bases: Runner, ABC"]],"kenning.core.dataprovider.DataProvider.preprocess_input":[[15,1,2,0,"data","The data to be preprocessed."]],"kenning.core.dataset":[[15,0,1,0,"Dataset","Bases: ArgumentsHandler, ABC"]],"kenning.core.dataset.Dataset":[[15,3,1,0,"_dataindex","ID of the next data to be delivered for inference."],[15,3,1,0,"batch_size","The batch size for the dataset."],[15,2,1,0,"calibration_dataset_generator","Creates generator for the calibration data."],[15,3,1,0,"dataX","List of input data (or data representing input data, i.e. file paths)."],[15,3,1,0,"dataXtest","dataX subset representing a testing set. Available after executing train_test_split_representations, otherwise empty."],[15,3,1,0,"dataXtrain","dataX subset representing a training set. Available after executing train_test_split_representations, otherwise empty."],[15,3,1,0,"dataXval","Optional dataX subset representing a validation set. Available after executing train_test_split_representations, otherwise empty."],[15,3,1,0,"dataY","List of output data (or data representing output data)."],[15,3,1,0,"dataYtest","dataY subset representing a testing set. Available after executing train_test_split_representations, otherwise empty."],[15,3,1,0,"dataYtrain","dataY subset representing a training set. Available after executing train_test_split_representations, otherwise empty."],[15,3,1,0,"dataYval","Optional dataY subset representing a validation set. Available after executing train_test_split_representations, otherwise empty."],[15,2,1,0,"download_dataset_fun","Downloads the dataset to the root directory defined in the constructor."],[15,2,1,0,"evaluate","Evaluates the model based on the predictions."],[15,2,1,0,"from_argparse","Constructor wrapper that takes the parameters from argparse args."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"get_class_names","Returns list of class names in order of their IDs."],[15,2,1,0,"get_data","Returns the tuple of all inputs and outputs for the dataset."],[15,2,1,0,"get_data_unloaded","Returns the input and output representations before loading."],[15,2,1,0,"get_input_mean_std","Returns mean and std values for input tensors."],[15,2,1,0,"iter_test","Iterates over test data obtained from split."],[15,2,1,0,"iter_train","Iterates over train data obtained from split."],[15,2,1,0,"iter_val","Iterates over validation data obtained from split."],[15,2,1,0,"prepare","Prepares dataX and dataY attributes based on the dataset contents."],[15,2,1,0,"prepare_external_calibration_dataset","Prepares the data for external calibration dataset."],[15,2,1,0,"prepare_input_samples","Prepares input samples, i.e. load images from files, converts them."],[15,2,1,0,"prepare_output_samples","Prepares output samples."],[15,2,1,0,"save_dataset_checksum","Writes dataset checksum to file."],[15,2,1,0,"set_batch_size","Sets the batch size of the data in the iterator batches."],[15,2,1,0,"test_subset_len","Returns the length of a single batch from the training set."],[15,2,1,0,"train_subset_len","Returns the length of a single batch from the training set."],[15,2,1,0,"train_test_split_representations","Splits the data representations into train dataset and test dataset."],[15,2,1,0,"val_subset_len","Returns the length of a single batch from the training set."],[15,2,1,0,"verify_dataset_checksum","Checks whether dataset is already downloaded in its directory."]],"kenning.core.dataset.Dataset.__init__":[[15,1,2,"kenning.core.dataset.Dataset","batch_size","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.dataset.Dataset","dataset_percentage","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.dataset.Dataset","download_dataset","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.dataset.Dataset","external_calibration_dataset","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.dataset.Dataset","force_download_dataset","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.dataset.Dataset","root","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.dataset.Dataset","split_fraction_test","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.dataset.Dataset","split_fraction_val","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.dataset.Dataset","split_seed","Bases: ArgumentsHandler, ABC"]],"kenning.core.dataset.Dataset.calibration_dataset_generator":[[15,1,2,0,"percentage","The fraction of data to use for calibration."],[15,1,2,0,"seed","The seed for random state, by default seed used for the dataset split."]],"kenning.core.dataset.Dataset.evaluate":[[15,1,2,0,"predictions","The list of predictions from the model."],[15,1,2,0,"truth","The ground truth for given batch."]],"kenning.core.dataset.Dataset.from_argparse":[[15,1,2,0,"args","Arguments from ArgumentParser object."]],"kenning.core.dataset.Dataset.from_json":[[15,1,2,0,"json_dict","Arguments for the constructor."]],"kenning.core.dataset.Dataset.prepare_external_calibration_dataset":[[15,1,2,0,"percentage","Percentage of dataset to be used."],[15,1,2,0,"seed","Random state seed."]],"kenning.core.dataset.Dataset.prepare_input_samples":[[15,1,2,0,"samples","List of input samples to be processed."]],"kenning.core.dataset.Dataset.prepare_output_samples":[[15,1,2,0,"samples","List of output samples to be processed."]],"kenning.core.dataset.Dataset.set_batch_size":[[15,1,2,0,"batch_size","Number of input samples per batch."]],"kenning.core.dataset.Dataset.train_test_split_representations":[[15,1,2,0,"append_index","Whether to return the indices of the split."],[15,1,2,0,"seed","The seed for random state."],[15,1,2,0,"stratify","Whether to stratify the split."],[15,1,2,0,"test_fraction","The fraction of data to leave for model testing."],[15,1,2,0,"val_fraction","The fraction of data to leave for model validation."]],"kenning.core.flow":[[15,0,1,0,"KenningFlow","Bases: object"]],"kenning.core.flow.KenningFlow":[[15,2,1,0,"form_parameterschema","Creates schema for the KenningFlow class."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"run","Main process function. Repeatedly runs constructed graph in a loop."],[15,2,1,0,"run_single_step","Runs flow one time."]],"kenning.core.flow.KenningFlow.__init__":[[15,1,2,"kenning.core.flow.KenningFlow","runners","Bases: object"]],"kenning.core.flow.KenningFlow.from_json":[[15,1,2,0,"runners_specifications","List of runners that creates the flow."]],"kenning.core.measurements":[[15,0,1,0,"Measurements","Stores benchmark measurements for later processing."],[15,0,1,0,"MeasurementsCollector","It is a 'static' class collecting measurements from various sources."],[15,0,1,0,"SystemStatsCollector","It is a separate thread used for collecting system statistics."],[15,5,1,0,"systemstatsmeasurements","Decorator for measuring memory usage of the function."],[15,5,1,0,"tagmeasurements","Decorator for adding tags for measurements and saving their timestamps."],[15,5,1,0,"timemeasurements","Decorator for measuring time of the function."]],"kenning.core.measurements.Measurements":[[15,2,1,0,"accumulate","Adds given value to a measurement."],[15,2,1,0,"add_measurement","Add new value to a given measurement type."],[15,2,1,0,"clear","Clears measurement data."],[15,2,1,0,"copy","Makes copy of measurements data."],[15,3,1,0,"data","Dictionary storing lists of values."],[15,2,1,0,"get_values","Returns list of values for a given measurement type."],[15,2,1,0,"initialize_measurement","Sets the initial value for a given measurement type."],[15,2,1,0,"update_measurements","Adds measurements of types given in the other object."]],"kenning.core.measurements.Measurements.accumulate":[[15,1,2,"kenning.core.measurements.Measurements.accumulate","measurementtype: str","Adds given value to a measurement."]],"kenning.core.measurements.Measurements.accumulate.initvaluefunc: ~typing":[[15,1,2,"kenning.core.measurements.Measurements.accumulate","Callable[[]","Adds given value to a measurement."]],"kenning.core.measurements.Measurements.accumulate.valuetoadd: ~typing":[[15,1,2,"kenning.core.measurements.Measurements.accumulate","Any","Adds given value to a measurement."]],"kenning.core.measurements.Measurements.accumulate.~typing.Any] = &lt;function Measurements":[[15,1,2,"kenning.core.measurements.Measurements.accumulate","&lt;lambda&gt;&gt;","Adds given value to a measurement."]],"kenning.core.measurements.Measurements.add_measurement":[[15,1,2,"kenning.core.measurements.Measurements.add_measurement","measurementtype: str","Add new value to a given measurement type."]],"kenning.core.measurements.Measurements.add_measurement.initialvaluefunc: ~typing":[[15,1,2,"kenning.core.measurements.Measurements.add_measurement","Callable[[]","Add new value to a given measurement type."]],"kenning.core.measurements.Measurements.add_measurement.value: ~typing":[[15,1,2,"kenning.core.measurements.Measurements.add_measurement","Any","Add new value to a given measurement type."]],"kenning.core.measurements.Measurements.add_measurement.~typing.Any] = &lt;function Measurements":[[15,1,2,"kenning.core.measurements.Measurements.add_measurement","&lt;lambda&gt;&gt;","Add new value to a given measurement type."]],"kenning.core.measurements.Measurements.get_values":[[15,1,2,0,"measurementtype","The name of the measurement type."]],"kenning.core.measurements.Measurements.initialize_measurement":[[15,1,2,0,"measurement_type","The type (name) of the measurement."],[15,1,2,0,"value","The initial value for the measurement type."]],"kenning.core.measurements.Measurements.update_measurements":[[15,1,2,0,"other","A dictionary or another Measurements object that contains lists in every entry."]],"kenning.core.measurements.MeasurementsCollector":[[15,2,1,0,"clear","Clears measurement data."],[15,2,1,0,"save_measurements","Saves measurements to JSON file."],[15,2,1,0,"set_unoptimized","Copies unoptimized model measurements to UNOPTIMIZED field of the optimized model measurements."]],"kenning.core.measurements.MeasurementsCollector.save_measurements":[[15,1,2,0,"resultpath","Path to the saved JSON file."]],"kenning.core.measurements.MeasurementsCollector.set_unoptimized":[[15,1,2,0,"optimized_measurementspath","Path to the optimized model measurements."],[15,1,2,0,"remove_unoptimized_measurementsfile","Determines whether the unoptimized model measurements should be deleted."],[15,1,2,0,"unoptimized_measurementspath","Path to the unoptimized model measurements."]],"kenning.core.measurements.SystemStatsCollector":[[15,2,1,0,"get_measurements","Returns measurements from the thread."],[15,2,1,0,"run","Method representing the thread's activity."]],"kenning.core.measurements.SystemStatsCollector.__init__":[[15,1,2,"kenning.core.measurements.SystemStatsCollector","prefix","It is a separate thread used for collecting system statistics."],[15,1,2,"kenning.core.measurements.SystemStatsCollector","step","It is a separate thread used for collecting system statistics."]],"kenning.core.measurements.systemstatsmeasurements":[[15,1,2,0,"measurementname","The name of the measurement type."],[15,1,2,0,"step","The step for the measurements, in seconds."]],"kenning.core.measurements.tagmeasurements":[[15,1,2,0,"tagname","The name of tag."]],"kenning.core.measurements.timemeasurements":[[15,1,2,"kenning.core.measurements.timemeasurements","float] = &lt;built-in function perf_counter&gt;","Decorator for measuring time of the function."],[15,1,2,"kenning.core.measurements.timemeasurements","measurementname: str","Decorator for measuring time of the function."]],"kenning.core.measurements.timemeasurements.get_time_func: ~typing":[[15,1,2,"kenning.core.measurements.timemeasurements","Callable[[]","Decorator for measuring time of the function."]],"kenning.core.model":[[15,0,1,0,"ModelWrapper","Bases: IOInterface, ArgumentsHandler, ABC"]],"kenning.core.model.ModelWrapper":[[15,2,1,0,"convert_input_to_bytes","Converts the input returned by the preprocess_input method to bytes."],[15,2,1,0,"convert_output_from_bytes","Converts bytes array to the model output format."],[15,2,1,0,"derive_io_spec_from_json_params","Creates IO specification by deriving parameters from parsed JSON dictionary. The resulting IO specification may differ from the results of get_io_specification, information that couldn't be retrieved from JSON parameters are absent from final IO spec or are filled with general value (example: '-1' for unknown dimension shape)."],[15,2,1,0,"from_argparse","Constructor wrapper that takes the parameters from argparse args."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"get_framework_and_version","Returns name of the framework and its version in a form of a tuple."],[15,2,1,0,"get_io_specification","Returns a saved dictionary with input and output keys that map to input and output specifications."],[15,2,1,0,"get_io_specification_from_model","Returns a new instance of dictionary with input and output keys that map to input and output specifications."],[15,2,1,0,"get_model_size","Returns the model size."],[15,2,1,0,"get_output_formats","Returns list of names of possible output formats."],[15,2,1,0,"get_path","Returns path to the model in a form of a Path or ResourceURI object."],[15,2,1,0,"load_model","Loads the model from file."],[15,2,1,0,"parse_io_specification_from_json","Return dictionary with 'input' and 'output' keys that will map to input and output specification of an object created by the argument json schema."],[15,2,1,0,"postprocess_outputs","Processes the outputs for a given model."],[15,2,1,0,"prepare_model","Downloads the model (if required) and loads it to the device."],[15,2,1,0,"preprocess_input","Preprocesses the inputs for a given model before inference."],[15,2,1,0,"read_platform","Reads Platform data to configure model."],[15,2,1,0,"run_inference","Runs inference for a given preprocessed input."],[15,2,1,0,"save_model","Saves the model to file."],[15,2,1,0,"save_to_onnx","Saves the model in the ONNX format."],[15,2,1,0,"test_inference","Runs the inference on test split of the dataset."],[15,2,1,0,"train_model","Trains the model with a given dataset."]],"kenning.core.model.ModelWrapper.__init__":[[15,1,2,"kenning.core.model.ModelWrapper","dataset","Bases: IOInterface, ArgumentsHandler, ABC"],[15,1,2,"kenning.core.model.ModelWrapper","from_file","Bases: IOInterface, ArgumentsHandler, ABC"],[15,1,2,"kenning.core.model.ModelWrapper","model_name","Bases: IOInterface, ArgumentsHandler, ABC"],[15,1,2,"kenning.core.model.ModelWrapper","model_path","Bases: IOInterface, ArgumentsHandler, ABC"]],"kenning.core.model.ModelWrapper.convert_input_to_bytes":[[15,1,2,0,"inputdata","The preprocessed inputs."]],"kenning.core.model.ModelWrapper.convert_output_from_bytes":[[15,1,2,0,"outputdata","Output data in raw bytes."]],"kenning.core.model.ModelWrapper.derive_io_spec_from_json_params":[[15,1,2,0,"json_dict","JSON dictionary formed by parsing the input JSON with ModelWrapper's parameterschema."]],"kenning.core.model.ModelWrapper.from_argparse":[[15,1,2,0,"args","Arguments from ArgumentParser object."],[15,1,2,0,"dataset","The dataset object to feed to the model."],[15,1,2,0,"from_file","Determines if the model should be loaded from model_path."]],"kenning.core.model.ModelWrapper.from_json":[[15,1,2,0,"dataset","The dataset object to feed to the model."],[15,1,2,0,"from_file","Determines if the model should be loaded from model_path."],[15,1,2,0,"json_dict","Arguments for the constructor."]],"kenning.core.model.ModelWrapper.load_model":[[15,1,2,0,"model_path","Path or URI to the model file."]],"kenning.core.model.ModelWrapper.parse_io_specification_from_json":[[15,1,2,0,"json_dict","Parameters for object constructor in JSON format."]],"kenning.core.model.ModelWrapper.postprocess_outputs":[[15,1,2,0,"y","The list of output data from the model."]],"kenning.core.model.ModelWrapper.preprocess_input":[[15,1,2,0,"X","The input data from the Dataset object."]],"kenning.core.model.ModelWrapper.read_platform":[[15,1,2,0,"platform","object with platform details"]],"kenning.core.model.ModelWrapper.run_inference":[[15,1,2,0,"X","The preprocessed inputs for the model."]],"kenning.core.model.ModelWrapper.save_model":[[15,1,2,0,"model_path","Path or URI to the model file."]],"kenning.core.model.ModelWrapper.save_to_onnx":[[15,1,2,0,"model_path","Path or URI to the model file."]],"kenning.core.onnxconversion":[[15,0,1,0,"ONNXConversion","Bases: ABC"]],"kenning.core.onnxconversion.ONNXConversion":[[15,2,1,0,"add_entry","Adds new model for verification."],[15,2,1,0,"check_conversions","Runs ONNX conversion for every model entry in the list of models."],[15,2,1,0,"onnx_export","Virtual function for exporting the model to ONNX in a given framework."],[15,2,1,0,"onnx_import","Virtual function for importing ONNX model to a given framework."],[15,2,1,0,"prepare","Virtual function for preparing the ONNX conversion test."]],"kenning.core.onnxconversion.ONNXConversion.__init__":[[15,1,2,"kenning.core.onnxconversion.ONNXConversion","framework","Bases: ABC"],[15,1,2,"kenning.core.onnxconversion.ONNXConversion","version","Bases: ABC"]],"kenning.core.onnxconversion.ONNXConversion.add_entry":[[15,1,2,"kenning.core.onnxconversion.ONNXConversion.add_entry","kwargs","Adds new model for verification."],[15,1,2,0,"modelgenerator","Function that generates the model for ONNX conversion in a given framework."],[15,1,2,0,"name","Full name of the model, should match the name of the same models in other framework's implementations."]],"kenning.core.onnxconversion.ONNXConversion.check_conversions":[[15,1,2,0,"modelsdir","Path to the directory where the intermediate models will be saved."]],"kenning.core.onnxconversion.ONNXConversion.onnx_export":[[15,1,2,0,"exportpath","Path to the output ONNX file."],[15,1,2,0,"modelentry","ModelEntry object."]],"kenning.core.onnxconversion.ONNXConversion.onnx_import":[[15,1,2,0,"importpath","Path to the input ONNX file."],[15,1,2,0,"modelentry","ModelEntry object."]],"kenning.core.optimizer":[[15,0,1,0,"Optimizer","Bases: ArgumentsHandler, ABC"]],"kenning.core.optimizer.Optimizer":[[15,2,1,0,"compile","Compiles the given model to a target format."],[15,2,1,0,"consult_model_type","Finds output format of the previous block in the chain matching with an input format of the current block."],[15,2,1,0,"from_argparse","Constructor wrapper that takes the parameters from argparse args."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"get_framework_and_version","Returns name of the framework and its version in a form of a tuple."],[15,2,1,0,"get_input_formats","Returns list of names of possible input formats."],[15,2,1,0,"get_input_type","Return input model type. If input type is set to \"any\", then it is derived from model file extension."],[15,2,1,0,"get_optimized_model_size","Returns the optimized model size."],[15,2,1,0,"get_output_formats","Returns list of names of possible output formats."],[15,2,1,0,"get_spec_path","Returns input/output specification path for the model saved in model_path. It concatenates model_path and .json."],[15,2,1,0,"init","Initializes optimizer, should be called before compilation."],[15,2,1,0,"load_io_specification","Returns saved input and output specification of a model saved in model_path if there is one. Otherwise returns None."],[15,2,1,0,"read_platform","Reads Platform data to configure optimization/compilation."],[15,2,1,0,"save_io_specification","Internal function that saves input/output model specification which is used during both inference and compilation. If io_spec is None, the function uses specification of an input model stored in input_model_path + .json. If there is no specification stored in this path the function does not do anything."],[15,2,1,0,"set_compiled_model_path","Sets path for compiled model."],[15,2,1,0,"set_input_type","Sets input type of the model for the compiler."]],"kenning.core.optimizer.Optimizer.__init__":[[15,1,2,"kenning.core.optimizer.Optimizer","compiled_model_path","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.optimizer.Optimizer","dataset","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.optimizer.Optimizer","location","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.optimizer.Optimizer","model_wrapper","Bases: ArgumentsHandler, ABC"]],"kenning.core.optimizer.Optimizer.compile":[[15,1,2,0,"input_model_path","Path to the input model."],[15,1,2,0,"io_spec","Dictionary that has input and output keys that contain list of dictionaries mapping (property name) -> (property value) for the layers."]],"kenning.core.optimizer.Optimizer.consult_model_type":[[15,1,2,0,"force_onnx","Forces ONNX format."],[15,1,2,0,"previous_block","Previous block in the optimization chain."]],"kenning.core.optimizer.Optimizer.from_argparse":[[15,1,2,0,"args","Arguments from ArgumentParser object."],[15,1,2,0,"dataset","The dataset object that is optionally used for optimization."]],"kenning.core.optimizer.Optimizer.from_json":[[15,1,2,0,"dataset","The dataset object that is optionally used for optimization."],[15,1,2,0,"json_dict","Arguments for the constructor."],[15,1,2,0,"model_wrapper","ModelWrapper for the optimized model (optional)."]],"kenning.core.optimizer.Optimizer.get_input_type":[[15,1,2,0,"model_path","Path to the input model."]],"kenning.core.optimizer.Optimizer.get_spec_path":[[15,1,2,0,"model_path","Path where the model is saved."]],"kenning.core.optimizer.Optimizer.load_io_specification":[[15,1,2,0,"model_path","Path to the model which specification the function should read."]],"kenning.core.optimizer.Optimizer.read_platform":[[15,1,2,0,"platform","object with platform details"]],"kenning.core.optimizer.Optimizer.save_io_specification":[[15,1,2,0,"input_model_path","Path to the input model."],[15,1,2,0,"io_spec","Specification of the input/ouput layers."]],"kenning.core.optimizer.Optimizer.set_compiled_model_path":[[15,1,2,"kenning.core.optimizer.Optimizer.set_compiled_model_path","compiled_model_path","Sets path for compiled model."]],"kenning.core.optimizer.Optimizer.set_input_type":[[15,1,2,"kenning.core.optimizer.Optimizer.set_input_type","inputtype","Sets input type of the model for the compiler."]],"kenning.core.outputcollector":[[15,0,1,0,"OutputCollector","Bases: Runner, ABC"]],"kenning.core.outputcollector.OutputCollector":[[15,2,1,0,"detach_from_output","Detaches from the output during shutdown."],[15,2,1,0,"process_output","Returns the inferred data back to the specific place/device/connection."],[15,2,1,0,"should_close","Checks if a specific exit condition was reached."]],"kenning.core.outputcollector.OutputCollector.__init__":[[15,1,2,"kenning.core.outputcollector.OutputCollector","inputs_sources","Bases: Runner, ABC"],[15,1,2,"kenning.core.outputcollector.OutputCollector","inputs_specs","Bases: Runner, ABC"],[15,1,2,"kenning.core.outputcollector.OutputCollector","outputs","Bases: Runner, ABC"]],"kenning.core.outputcollector.OutputCollector.process_output":[[15,1,2,0,"input_data","Data collected from Datacollector that was processed by the model."],[15,1,2,0,"output_data","Data returned from the model."]],"kenning.core.platform":[[15,0,1,0,"Platform","Bases: ArgumentsHandler, ABC"]],"kenning.core.platform.Platform":[[15,2,1,0,"deinit","Deinitializes platform."],[15,2,1,0,"get_default_protocol","Returns default protocol for given platform."],[15,2,1,0,"get_time","Retrieves elapsed time from platform."],[15,2,1,0,"inference_step_callback","Callback that is run every inference step."],[15,2,1,0,"init","Initializes the platform."],[15,2,1,0,"read_data_from_platforms_yaml","Retrieves platform data from specified platform definition files."]],"kenning.core.platform.Platform.__init__":[[15,1,2,"kenning.core.platform.Platform","name","Bases: ArgumentsHandler, ABC"],[15,1,2,"kenning.core.platform.Platform","platforms_definitions","Bases: ArgumentsHandler, ABC"]],"kenning.core.platform.Platform.deinit":[[15,1,2,0,"measurements","Measurements to which platform metrics can be added to."]],"kenning.core.protocol":[[15,0,1,0,"Protocol","Bases: ArgumentsHandler, ABC"],[15,0,1,0,"ServerStatus","Bases: object"]],"kenning.core.protocol.Protocol":[[15,2,1,0,"disconnect","Ends connection with the other side."],[15,2,1,0,"download_output","Downloads the outputs from the target device."],[15,2,1,0,"download_statistics","Downloads inference statistics from the target device."],[15,2,1,0,"from_argparse","Constructor wrapper that takes the parameters from argparse args."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"initialize_client","Initializes client side of the protocol."],[15,2,1,0,"initialize_server","Initializes server side of the protocol."],[15,2,1,0,"listen_to_server_logs","Starts continuously receiving and printing logs sent by the server."],[15,2,1,0,"request_optimization","Request optimization of model."],[15,2,1,0,"request_processing","Requests processing of input data and waits for acknowledgement."],[15,2,1,0,"serve","Waits for requests from the other device (the client) and calls appropriate callbacks. Some callbacks take bytes as arguments, all return ServerStatus and some also return bytes. These responses are then sent back to the client."],[15,2,1,0,"start_sending_logs","Starts sending over the protocol all logs, except for the logs generated by the operation of sending logs itself (otherwise we would have an infinite logging recursion)."],[15,2,1,0,"stop_sending_logs","Stops sending logs over the protocol."],[15,2,1,0,"upload_input","Uploads input to the target device and waits for acknowledgement."],[15,2,1,0,"upload_io_specification","Uploads input/output specification to the target device."],[15,2,1,0,"upload_model","Uploads the model to the target device."],[15,2,1,0,"upload_optimizers","Upload optimizers config to the target device."],[15,2,1,0,"upload_runtime","Uploads the runtime to the target device."]],"kenning.core.protocol.Protocol.__init__":[[15,1,2,"kenning.core.protocol.Protocol","timeout","Bases: ArgumentsHandler, ABC"]],"kenning.core.protocol.Protocol.download_statistics":[[15,1,2,0,"final","If the inference is finished"]],"kenning.core.protocol.Protocol.from_argparse":[[15,1,2,0,"args","Arguments from Protocol object."]],"kenning.core.protocol.Protocol.from_json":[[15,1,2,0,"json_dict","Arguments for the constructor."]],"kenning.core.protocol.Protocol.initialize_server":[[15,1,2,0,"client_connected_callback","Called when a client connects to the server."],[15,1,2,0,"client_disconnected_callback","Called, when the current client disconnects from the server."]],"kenning.core.protocol.Protocol.request_optimization":[[15,1,2,"kenning.core.protocol.Protocol.request_optimization","float] = &lt;built-in function perf_counter&gt;","Request optimization of model."]],"kenning.core.protocol.Protocol.request_optimization.get_time_func: ~typing":[[15,1,2,"kenning.core.protocol.Protocol.request_optimization","Callable[[]","Request optimization of model."]],"kenning.core.protocol.Protocol.request_optimization.model_path: ~pathlib":[[15,1,2,"kenning.core.protocol.Protocol.request_optimization","Path","Request optimization of model."]],"kenning.core.protocol.Protocol.request_processing":[[15,1,2,"kenning.core.protocol.Protocol.request_processing","float] = &lt;built-in function perf_counter&gt;","Requests processing of input data and waits for acknowledgement."]],"kenning.core.protocol.Protocol.request_processing.get_time_func: ~typing":[[15,1,2,"kenning.core.protocol.Protocol.request_processing","Callable[[]","Requests processing of input data and waits for acknowledgement."]],"kenning.core.protocol.Protocol.serve":[[15,1,2,0,"download_optimized_model_callback","Called, when client requests optimization of the model (uploaded with 'upload_unoptimized_model_callback'). Should optimize the model and return it."],[15,1,2,0,"download_output_callback","Called, when the client requests inference output, should return status of the server and the output."],[15,1,2,0,"download_stats_callback","Called, when the client requests inference stats, should end the inference session and return status of the server and stats."],[15,1,2,0,"process_input_callback","Called, when the client requests inference."],[15,1,2,"kenning.core.protocol.Protocol.serve","self","Waits for requests from the other device (the client) and calls appropriate callbacks. Some callbacks take bytes as arguments, all return ServerStatus and some also return bytes. These responses are then sent back to the client."],[15,1,2,0,"upload_input_callback","Called, when the client uploads input ('upload_input' method below)."],[15,1,2,0,"upload_iospec_callback","Called to upload model input/output specifications (iospec)."],[15,1,2,0,"upload_model_callback","Called."],[15,1,2,0,"upload_optimizers_callback","Called to upload optimizer config (serialized JSON) - 'upload_optimizers' method call by the client."],[15,1,2,0,"upload_runtime_callback","Called, when the client uploads runtime."],[15,1,2,0,"upload_unoptimized_model_callback","Called to upload an unoptimized ML model, should save it."]],"kenning.core.protocol.Protocol.upload_input":[[15,1,2,0,"data","Input data for inference."]],"kenning.core.protocol.Protocol.upload_io_specification":[[15,1,2,0,"path","Path to the json file."]],"kenning.core.protocol.Protocol.upload_model":[[15,1,2,0,"path","Path to the model."]],"kenning.core.protocol.Protocol.upload_optimizers":[[15,1,2,0,"optimizers_cfg","Config JSON of optimizers."]],"kenning.core.protocol.Protocol.upload_runtime":[[15,1,2,0,"path","Path to the runtime binary."]],"kenning.core.protocol.ServerStatus":[[15,2,1,0,"finish_action","Updates the status with information about current action being finished and whether is succeeded or not."],[15,2,1,0,"start_action","Updates the status with information about new task started by the server. Sets the 'success' value to None (which means, that the action is in progress)."]],"kenning.core.protocol.ServerStatus.__init__":[[15,1,2,"kenning.core.protocol.ServerStatus","last_action","Bases: object"],[15,1,2,"kenning.core.protocol.ServerStatus","success","Bases: object"]],"kenning.core.protocol.ServerStatus.finish_action":[[15,1,2,0,"success","True if action succeeded, False if not."]],"kenning.core.protocol.ServerStatus.start_action":[[15,1,2,0,"action","Action being started."]],"kenning.core.runner":[[15,0,1,0,"Runner","Bases: IOInterface, ArgumentsHandler, ABC"]],"kenning.core.runner.Runner":[[15,2,1,0,"cleanup","Method that cleans resources after Runner is no longer needed."],[15,2,1,0,"from_argparse","Constructor wrapper that takes the parameters from argparse args."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"run","Method used to run this Runner."],[15,2,1,0,"should_close","Method that checks if Runner got some exit indication (exception etc.) and the flow should close."]],"kenning.core.runner.Runner.__init__":[[15,1,2,"kenning.core.runner.Runner","inputs_sources","Bases: IOInterface, ArgumentsHandler, ABC"],[15,1,2,"kenning.core.runner.Runner","inputs_specs","Bases: IOInterface, ArgumentsHandler, ABC"],[15,1,2,"kenning.core.runner.Runner","outputs","Bases: IOInterface, ArgumentsHandler, ABC"]],"kenning.core.runner.Runner.from_argparse":[[15,1,2,0,"args","Arguments from ArgumentParser object."],[15,1,2,0,"inputs_sources","Input from where data is being retrieved."],[15,1,2,0,"inputs_specs","Specifications of runner's inputs."],[15,1,2,0,"outputs","Outputs of this Runner."]],"kenning.core.runner.Runner.from_json":[[15,1,2,0,"inputs_sources","Input from where data is being retrieved."],[15,1,2,0,"inputs_specs","Specifications of runner's inputs."],[15,1,2,0,"json_dict","Arguments for the constructor."],[15,1,2,0,"outputs","Outputs of this Runner."]],"kenning.core.runner.Runner.run":[[15,1,2,0,"inputs","Inputs provided to this block."]],"kenning.core.runtime":[[15,0,1,0,"Runtime","Bases: ArgumentsHandler, ABC"]],"kenning.core.runtime.Runtime":[[15,2,1,0,"extract_output","Extracts and postprocesses the output of the model."],[15,2,1,0,"from_argparse","Constructor wrapper that takes the parameters from argparse args."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"get_available_ram","Gets size of the RAM (or other type of memory where the model will be stored) for the given platform."],[15,2,1,0,"get_input_formats","Returns list of names of possible input formats names."],[15,2,1,0,"get_io_spec_path","Gets path to a input/output specification file which is model_path and .json concatenated."],[15,2,1,0,"get_time","Gets the current timestamp."],[15,2,1,0,"infer","Runs inference on single batch locally using a given runtime."],[15,2,1,0,"inference_session_end","Calling this function indicates that the inference session has ended."],[15,2,1,0,"inference_session_start","Calling this function indicates that the client is connected."],[15,2,1,0,"load_input","Loads and converts delivered data to the accelerator for inference."],[15,2,1,0,"load_input_from_bytes","The method accepts input_data in bytes and loads it according to the input specification."],[15,2,1,0,"prepare_io_specification","Receives the io_specification from the client in bytes and saves it for later use."],[15,2,1,0,"prepare_local","Runs initialization for the local inference."],[15,2,1,0,"prepare_model","Receives the model to infer from the client in bytes."],[15,2,1,0,"preprocess_model_to_upload","The method preprocesses the model to be uploaded to the client and returns a new path to it."],[15,2,1,0,"read_io_specification","Saves input/output specification so that it can be used during the inference."],[15,2,1,0,"run","Runs inference on prepared input."],[15,2,1,0,"upload_output","Returns the output to the client, in bytes."],[15,2,1,0,"upload_stats","Returns statistics of inference passes to the client."]],"kenning.core.runtime.Runtime.__init__":[[15,1,2,"kenning.core.runtime.Runtime","disable_performance_measurements","Bases: ArgumentsHandler, ABC"]],"kenning.core.runtime.Runtime.from_argparse":[[15,1,2,0,"args","Arguments from ArgumentParser object."]],"kenning.core.runtime.Runtime.from_json":[[15,1,2,0,"json_dict","Arguments for the constructor."]],"kenning.core.runtime.Runtime.get_available_ram":[[15,1,2,0,"platform","The platform representation."]],"kenning.core.runtime.Runtime.get_io_spec_path":[[15,1,2,0,"model_path","URI to the compiled model."]],"kenning.core.runtime.Runtime.infer":[[15,1,2,0,"X","Batch of data provided for inference."],[15,1,2,0,"model_wrapper","Model that is executed on target hardware."],[15,1,2,0,"postprocess","Indicates if model output should be postprocessed."]],"kenning.core.runtime.Runtime.load_input":[[15,1,2,0,"input_data","Input data in bytes delivered by the client, preprocessed."]],"kenning.core.runtime.Runtime.load_input_from_bytes":[[15,1,2,0,"input_data","Input data in bytes delivered by the client."]],"kenning.core.runtime.Runtime.prepare_io_specification":[[15,1,2,0,"input_data","The io_specification` or None, if it should be loaded from another source."]],"kenning.core.runtime.Runtime.prepare_model":[[15,1,2,0,"input_data","Model data or None, if the model should be loaded from another source."]],"kenning.core.runtime.Runtime.preprocess_model_to_upload":[[15,1,2,0,"path","Path to the model to preprocess."]],"kenning.core.runtime.Runtime.read_io_specification":[[15,1,2,0,"io_spec","Specification of the input/output layers."]],"kenning.core.runtime.Runtime.upload_output":[[15,1,2,0,"input_data","Not used here."]],"kenning.core.runtime.Runtime.upload_stats":[[15,1,2,0,"input_data","Not used here."]],"kenning.protocols.bytes_based_protocol":[[21,0,1,0,"BytesBasedProtocol","Bases: Protocol, ABC"]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol":[[21,2,1,0,"check_status","Parses ServerStatus from the contents of a transmission (payload and flags) and compares it against given status."],[21,2,1,0,"download_output","Downloads the outputs from the target device."],[21,2,1,0,"download_statistics","Downloads inference statistics from the target device."],[21,2,1,0,"event_active","Checks if an active protocol event (Transmission, Request etc.) of a given message type exists."],[21,2,1,0,"kill_event","Forcibly stops an active event (Transmission, Request etc.)."],[21,2,1,0,"listen","Waits for transmissions and requests from the other side, without blocking the current thread."],[21,2,1,0,"listen_blocking","Blocks the current thread until a transmission or a request is received."],[21,2,1,0,"listen_to_server_logs","Starts continuously receiving and printing logs sent by the server."],[21,2,1,0,"request","Prompts the other side for a transmission and waits for a response, without blocking the current thread. Bytes and flags can also be sent along with the request."],[21,2,1,0,"request_blocking","Prompts the other side for a transmission and blocks the current thread until a response is received. Bytes and flags can also be sent along with the request."],[21,2,1,0,"request_optimization","Request optimization of model."],[21,2,1,0,"request_processing","Requests processing of input data and waits for acknowledgement."],[21,2,1,0,"serve","Waits for requests from the other device (the client) and calls appropriate callbacks. Some callbacks take bytes as arguments, all return ServerStatus and some also return bytes. These responses are then sent back to the client."],[21,2,1,0,"start_sending_logs","Starts sending over the protocol all logs, except for the logs generated by the operation of sending logs itself (otherwise we would have an infinite logging recursion)."],[21,2,1,0,"stop_sending_logs","Stops sending logs over the protocol."],[21,2,1,0,"transmit","Sends bytes and a set of flags to the other side, without blocking the current thread."],[21,2,1,0,"transmit_blocking","Sends bytes and a set of flags to the other side, blocks the current thread until the transmission is completed."],[21,2,1,0,"upload_input","Uploads input to the target device and waits for acknowledgement."],[21,2,1,0,"upload_io_specification","Uploads input/output specification to the target device."],[21,2,1,0,"upload_model","Uploads the model to the target device."],[21,2,1,0,"upload_optimizers","Upload optimizers config to the target device."],[21,2,1,0,"upload_runtime","Uploads the runtime to the target device."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.__init__":[[21,1,2,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol","timeout","Bases: Protocol, ABC"]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.check_status":[[21,1,2,0,"artifacts","Payload and bytes from a transmission."],[21,1,2,0,"status","Status to compare against."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.download_statistics":[[21,1,2,0,"final","If the inference is finished"]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.event_active":[[21,1,2,0,"message_type","Message type to check, or None (which will check for an event, that accepts all message types)."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.kill_event":[[21,1,2,0,"message_type","Message type to check, or None (which will stop an event, that accepts all message types)."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.listen":[[21,1,2,0,"failure_callback","Function, that will be called if a request/transmission is attempted by the other side, but fails."],[21,1,2,0,"limit","Meximum number of requests/transmissions (including failures), that will be received before listening stops."],[21,1,2,0,"message_type","Message type of the requests/transmissions to listen for, or None (to listen to requests/transmissions of any message type)."],[21,1,2,0,"request_callback","Function, that will be called when a request is successfully received."],[21,1,2,0,"transmission_callback","Function, that will be called when a transmission is successfully received."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.listen_blocking":[[21,1,2,0,"failure_callback","Function, that will be called if a request/transmission is attempted by the other side, but fails."],[21,1,2,0,"message_type","Message type of the requests/transmissions to listen for, or None (to listen to requests/transmissions of any message type)."],[21,1,2,0,"request_callback","Function, that will be called when a request is successfully received."],[21,1,2,0,"timeout","Maximum blocking time in seconds, or None to block indefinitely. If that time passes the 'deny_callback' will be called."],[21,1,2,0,"transmission_callback","Function, that will be called when a transmission is successfully received."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request":[[21,1,2,0,"callback","Function, that will be called when the transmission is received. Message type, payload and flags from the transmission will be passed to the function."],[21,1,2,0,"deny_callback","Function, that will be called if the request is denied or otherwise fails."],[21,1,2,0,"flags","A list of flags to be sent (available flags in the TransmissionFlag enum above - please note that some flags are only allowed for a specific message type)."],[21,1,2,0,"message_type","Value denoting what type of transmission is being requested."],[21,1,2,0,"payload","Bytes to send along with the request (or None if the payload is to be empty)."],[21,1,2,0,"retry","Denotes how many times the request will be re-sent after failing, before calling 'deny_callback'."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_blocking":[[21,1,2,0,"callback","Function, that will be called when the transmission is received. Message type, payload and flags from the transmission will be passed to the function."],[21,1,2,0,"deny_callback","Function, that will be called if the request is denied or otherwise fails."],[21,1,2,0,"flags","A list of flags to be sent (available flags in the TransmissionFlag enum above - please note that some flags are only allowed for a specific message type)."],[21,1,2,0,"message_type","Value denoting what type of transmission is being requested."],[21,1,2,0,"payload","Bytes to send along with the request (or None if the payload is to be empty)."],[21,1,2,0,"retry","Denotes how many times the request will be re-sent after failing, before calling 'deny_callback'."],[21,1,2,0,"timeout","Maximum blocking time in seconds, or None to block indefinitely. If that time passes the 'deny_callback' will be called."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_optimization":[[21,1,2,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_optimization","float] = &lt;built-in function perf_counter&gt;","Request optimization of model."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_optimization.get_time_func: ~typing":[[21,1,2,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_optimization","Callable[[]","Request optimization of model."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_optimization.model_path: ~pathlib":[[21,1,2,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_optimization","Path","Request optimization of model."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_processing":[[21,1,2,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_processing","float] = &lt;built-in function perf_counter&gt;","Requests processing of input data and waits for acknowledgement."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_processing.get_time_func: ~typing":[[21,1,2,"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.request_processing","Callable[[]","Requests processing of input data and waits for acknowledgement."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.serve":[[21,1,2,0,"download_optimized_model_callback","Called, when client requests optimization of the model (uploaded with 'upload_unoptimized_model_callback'). Should optimize the model and return it."],[21,1,2,0,"download_output_callback","Called, when the client requests inference output, should return status of the server and the output."],[21,1,2,0,"download_stats_callback","Called, when the client requests inference stats, should end the inference session and return status of the server and stats."],[21,1,2,0,"process_input_callback","Called, when the client requests inference."],[21,1,2,0,"upload_input_callback","Called, when the client uploads input ('upload_input' method below)."],[21,1,2,0,"upload_iospec_callback","Called to upload model input/output specifications (iospec)."],[21,1,2,0,"upload_model_callback","Called."],[21,1,2,0,"upload_optimizers_callback","Called to upload optimizer config (serialized JSON) - 'upload_optimizers' method call by the client."],[21,1,2,0,"upload_runtime_callback","Called, when the client uploads runtime."],[21,1,2,0,"upload_unoptimized_model_callback","Called to upload an unoptimized ML model, should save it."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.transmit":[[21,1,2,0,"failure_callback","Function, that will be called if the transmission fails to send. Note: This will be executed on a separate thread, so make sure the function is thread-safe."],[21,1,2,0,"flags","A list of flags to be sent (available flags in the TransmissionFlag enum above - please note that some flags are only allowed for a specific message type)."],[21,1,2,0,"message_type","Value denoting what is being sent."],[21,1,2,0,"payload","Bytes to send (or None if the payload is to be empty)."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.transmit_blocking":[[21,1,2,0,"failure_callback","Function, that will be called if the transmission fails to send."],[21,1,2,0,"flags","A list of flags to be sent (available flags in the TransmissionFlag enum above - please note that some flags are only allowed for a specific message type)."],[21,1,2,0,"message_type","Value denoting what is being sent."],[21,1,2,0,"payload","Bytes to send (or None if the payload is to be empty)."],[21,1,2,0,"timeout","Maximum blocking time in seconds, or None to block indefinitely. If that time passes the 'failure_callback' will be called."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_input":[[21,1,2,0,"data","Input data for inference."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_io_specification":[[21,1,2,0,"path","Path to the json file."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_model":[[21,1,2,0,"path","Path to the model."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_optimizers":[[21,1,2,0,"optimizers_cfg","Config JSON of optimizers."]],"kenning.protocols.bytes_based_protocol.BytesBasedProtocol.upload_runtime":[[21,1,2,0,"path","Path to the runtime binary."]],"kenning.protocols.kenning_protocol":[[21,0,1,0,"KenningProtocol","Bases: BytesBasedProtocol, ABC"]],"kenning.protocols.kenning_protocol.KenningProtocol":[[21,2,1,0,"event_active","Checks if an active protocol event (Transmission, Request etc.) of a given message type exists."],[21,2,1,0,"finish_event","Removes an event from the 'current_protocol_events' dict and logs it's success or failure."],[21,2,1,0,"gather_data","Gathers data from the client."],[21,2,1,0,"kill_event","Forcibly stops an active event (Transmission, Request etc.)."],[21,2,1,0,"listen","Waits for transmissions and requests from the other side, without blocking the current thread."],[21,2,1,0,"listen_blocking","Blocks the current thread until a transmission or a request is received."],[21,2,1,0,"receive_data","Receives data from the target device."],[21,2,1,0,"receive_message","Waits for incoming data from the other side of connection."],[21,2,1,0,"receiver","Method sitting in a loop, receiving messages and passing them to the relevant ProtocolEvent class object in the 'current_protocol_events' dict, based on message type."],[21,2,1,0,"request","Prompts the other side for a transmission and waits for a response, without blocking the current thread. Bytes and flags can also be sent along with the request."],[21,2,1,0,"request_blocking","Prompts the other side for a transmission and blocks the current thread until a response is received. Bytes and flags can also be sent along with the request."],[21,2,1,0,"run_event","Adds a protocol event to the 'current_protocol_events' dict, so that it will be serviced by the receiver thread, starts it in non-blocking mode and passes callbacks."],[21,2,1,0,"run_event_blocking","Adds a protocol event to the 'current_protocol_events' dict, so that it will be serviced by the receiver thread, starts it in blocking mode and blocks the current thread until it completes."],[21,2,1,0,"send_data","Sends data to the target device."],[21,2,1,0,"send_message","Sends message to the target device."],[21,2,1,0,"send_messages","Gives a job to the 'transmitter' thread pool, that will send messages and call 'messages_sent' method on the appropriate ProtocolEvent object in the 'self.current_protocol_events' dict (based on message type)."],[21,2,1,0,"start","Starts the protocol, creates and runs threads for receiving and transmitting messages."],[21,2,1,0,"stop","Stops the protocol and joins all threads."],[21,2,1,0,"transmit","Sends bytes and a set of flags to the other side, without blocking the current thread."],[21,2,1,0,"transmit_blocking","Sends bytes and a set of flags to the other side, blocks the current thread until the transmission is completed."]],"kenning.protocols.kenning_protocol.KenningProtocol.__init__":[[21,1,2,"kenning.protocols.kenning_protocol.KenningProtocol","error_recovery","Bases: BytesBasedProtocol, ABC"],[21,1,2,"kenning.protocols.kenning_protocol.KenningProtocol","max_message_size","Bases: BytesBasedProtocol, ABC"],[21,1,2,"kenning.protocols.kenning_protocol.KenningProtocol","timeout","Bases: BytesBasedProtocol, ABC"]],"kenning.protocols.kenning_protocol.KenningProtocol.event_active":[[21,1,2,0,"message_type","Message type to check, or None (which will check for an event, that accepts all message types)."]],"kenning.protocols.kenning_protocol.KenningProtocol.finish_event":[[21,1,2,0,"event","Event to finish"],[21,1,2,0,"log_failure","If true, in case of event failure an error will be logged (used to suppress errors, when the event is being re-tried)."]],"kenning.protocols.kenning_protocol.KenningProtocol.gather_data":[[21,1,2,0,"timeout","Receive timeout in seconds."]],"kenning.protocols.kenning_protocol.KenningProtocol.kill_event":[[21,1,2,0,"message_type","Message type to check, or None (which will stop an event, that accepts all message types)."]],"kenning.protocols.kenning_protocol.KenningProtocol.listen":[[21,1,2,0,"failure_callback","Function, that will be called if a request/transmission is attempted by the other side, but fails."],[21,1,2,0,"limit","Meximum number of requests/transmissions (including failures), that will be received before listening stops."],[21,1,2,0,"message_type","Message type of the requests/transmissions to listen for, or None (to listen to requests/transmissions of any message type)."],[21,1,2,0,"request_callback","Function, that will be called when a request is successfully received."],[21,1,2,0,"transmission_callback","Function, that will be called when a transmission is successfully received."]],"kenning.protocols.kenning_protocol.KenningProtocol.listen_blocking":[[21,1,2,0,"failure_callback","Function, that will be called if a request/transmission is attempted by the other side, but fails."],[21,1,2,0,"message_type","Message type of the requests/transmissions to listen for, or None (to listen to requests/transmissions of any message type)."],[21,1,2,0,"request_callback","Function, that will be called when a request is successfully received."],[21,1,2,0,"timeout","Maximum blocking time in seconds, or None to block indefinitely. If that time passes the 'deny_callback' will be called."],[21,1,2,0,"transmission_callback","Function, that will be called when a transmission is successfully received."]],"kenning.protocols.kenning_protocol.KenningProtocol.receive_data":[[21,1,2,0,"connection","Connection used to read data."],[21,1,2,0,"mask","Selector mask from the event."]],"kenning.protocols.kenning_protocol.KenningProtocol.receive_message":[[21,1,2,0,"timeout","Receive timeout in seconds."]],"kenning.protocols.kenning_protocol.KenningProtocol.request":[[21,1,2,0,"callback","Function, that will be called when the transmission is received. Message type, payload and flags from the transmission will be passed to the function."],[21,1,2,0,"deny_callback","Function, that will be called if the request is denied or otherwise fails."],[21,1,2,0,"flags","A list of flags to be sent (available flags in the TransmissionFlag enum above - please note that some flags are only allowed for a specific message type)."],[21,1,2,0,"message_type","Value denoting what type of transmission is being requested."],[21,1,2,0,"payload","Bytes to send along with the request (or None if the payload is to be empty)."],[21,1,2,0,"retry","Denotes how many times the request will be re-sent after failing, before calling 'deny_callback'."]],"kenning.protocols.kenning_protocol.KenningProtocol.request_blocking":[[21,1,2,0,"callback","Function, that will be called when the transmission is received. Message type, payload and flags from the transmission will be passed to the function."],[21,1,2,0,"deny_callback","Function, that will be called if the request is denied or otherwise fails."],[21,1,2,0,"flags","A list of flags to be sent (available flags in the TransmissionFlag enum above - please note that some flags are only allowed for a specific message type)."],[21,1,2,0,"message_type","Value denoting what type of transmission is being requested."],[21,1,2,0,"payload","Bytes to send along with the request (or None if the payload is to be empty)."],[21,1,2,0,"retry","Denotes how many times the request will be re-sent after failing, before calling 'deny_callback'."],[21,1,2,0,"timeout","Maximum blocking time in seconds, or None to block indefinitely. If that time passes the 'deny_callback' will be called."]],"kenning.protocols.kenning_protocol.KenningProtocol.run_event":[[21,1,2,0,"deny_callback","Function, that will be called if the event fails."],[21,1,2,0,"event","Event to start."],[21,1,2,0,"success_callback","Function, that will be called if the event succeeds."]],"kenning.protocols.kenning_protocol.KenningProtocol.run_event_blocking":[[21,1,2,0,"event","Event to start."],[21,1,2,0,"timeout","Maximum blocking time in seconds (or None for infinite timeout)."]],"kenning.protocols.kenning_protocol.KenningProtocol.send_data":[[21,1,2,0,"data","Data to send."]],"kenning.protocols.kenning_protocol.KenningProtocol.send_message":[[21,1,2,0,"message","Message to be sent."]],"kenning.protocols.kenning_protocol.KenningProtocol.send_messages":[[21,1,2,0,"message_type","Message type of the ProtocolEvent, that sends the messages."],[21,1,2,0,"messages","List of messages to send."]],"kenning.protocols.kenning_protocol.KenningProtocol.transmit":[[21,1,2,0,"failure_callback","Function, that will be called if the transmission fails to send. Note: This will be executed on a separate thread, so make sure the function is thread-safe."],[21,1,2,0,"flags","A list of flags to be sent (available flags in the TransmissionFlag enum above - please note that some flags are only allowed for a specific message type)."],[21,1,2,0,"message_type","Value denoting what is being sent."],[21,1,2,0,"payload","Bytes to send (or None if the payload is to be empty)."]],"kenning.protocols.kenning_protocol.KenningProtocol.transmit_blocking":[[21,1,2,0,"failure_callback","Function, that will be called if the transmission fails to send."],[21,1,2,0,"flags","A list of flags to be sent (available flags in the TransmissionFlag enum above - please note that some flags are only allowed for a specific message type)."],[21,1,2,0,"message_type","Value denoting what is being sent."],[21,1,2,0,"payload","Bytes to send (or None if the payload is to be empty)."],[21,1,2,0,"timeout","Maximum blocking time in seconds, or None to block indefinitely. If that time passes the 'failure_callback' will be called."]],"kenning.protocols.network":[[21,0,1,0,"NetworkProtocol","Bases: KenningProtocol"]],"kenning.protocols.network.NetworkProtocol":[[21,2,1,0,"accept_client","Accepts the new client."],[21,2,1,0,"disconnect","Ends connection with the other side."],[21,2,1,0,"initialize_client","Initializes client side of the protocol."],[21,2,1,0,"initialize_server","Initializes server side of the protocol."],[21,2,1,0,"receive_data","Receives data from the target device."],[21,2,1,0,"send_data","Sends data to the target device."],[21,2,1,0,"wait_send","Wrapper for sending method that waits until write buffer is ready for new data."]],"kenning.protocols.network.NetworkProtocol.__init__":[[21,1,2,"kenning.protocols.network.NetworkProtocol","error_recovery","Bases: KenningProtocol"],[21,1,2,"kenning.protocols.network.NetworkProtocol","host","Bases: KenningProtocol"],[21,1,2,"kenning.protocols.network.NetworkProtocol","max_message_size","Bases: KenningProtocol"],[21,1,2,"kenning.protocols.network.NetworkProtocol","packet_size","Bases: KenningProtocol"],[21,1,2,"kenning.protocols.network.NetworkProtocol","port","Bases: KenningProtocol"],[21,1,2,"kenning.protocols.network.NetworkProtocol","timeout","Bases: KenningProtocol"]],"kenning.protocols.network.NetworkProtocol.accept_client":[[21,1,2,0,"mask","Selector mask."],[21,1,2,0,"socket","New client's socket."]],"kenning.protocols.network.NetworkProtocol.initialize_server":[[21,1,2,0,"client_connected_callback","Called when a client connects to the server."],[21,1,2,0,"client_disconnected_callback","Called, when the current client disconnects from the server."]],"kenning.protocols.network.NetworkProtocol.receive_data":[[21,1,2,0,"mask","Selector mask from the event."],[21,1,2,"kenning.protocols.network.NetworkProtocol.receive_data","socket","Receives data from the target device."]],"kenning.protocols.network.NetworkProtocol.send_data":[[21,1,2,0,"data","Data to send."]],"kenning.protocols.network.NetworkProtocol.wait_send":[[21,1,2,0,"data","Data to send."]],"kenning.utils.args_manager":[[15,0,1,0,"ArgumentsHandler","Bases: ABC"]],"kenning.utils.args_manager.ArgumentsHandler":[[15,2,1,0,"form_argparse","Creates argparse parser based on arguments_structure of class and its all parent classes."],[15,2,1,0,"form_parameterschema","Creates parameter schema based on arguments_structure of class and its all parent classes."],[15,2,1,0,"from_argparse","Constructor wrapper that takes the parameters from argparse args."],[15,2,1,0,"from_json","Constructor wrapper that takes the parameters from json dict."],[15,2,1,0,"to_json","Convert object to JSON that contains its type and all parameters."]],"kenning.utils.args_manager.ArgumentsHandler.form_argparse":[[15,1,2,0,"args","Arguments from ArgumentParser object."],[15,1,2,0,"override_only","True if only parameters marked as overridable should be parsed."]],"kenning.utils.args_manager.ArgumentsHandler.from_argparse":[[15,1,2,0,"args","Arguments from ArgumentParser object."],[15,1,2,"kenning.utils.args_manager.ArgumentsHandler.from_argparse","kwargs","Constructor wrapper that takes the parameters from argparse args."]],"kenning.utils.args_manager.ArgumentsHandler.from_json":[[15,1,2,0,"json_dict","Arguments for the constructor."],[15,1,2,"kenning.utils.args_manager.ArgumentsHandler.from_json","kwargs","Constructor wrapper that takes the parameters from json dict."]],"kenning.utils.resource_manager":[[15,0,1,0,"ResourceManager","Bases: object"],[15,0,1,0,"ResourceURI","Bases: Path"]],"kenning.utils.resource_manager.ResourceManager":[[15,2,1,0,"add_custom_url_schemes","Add user defined URL schemes."],[15,2,1,0,"clear_cache","Remove all cached files."],[15,2,1,0,"get_resource","Retrieve file and return path to it."],[15,2,1,0,"list_cached_files","Return list with cached files."],[15,2,1,0,"set_cache_dir","Set the cache directory path and creates it if not exists."],[15,2,1,0,"set_max_cache_size","Set the max cache size."],[15,2,1,0,"validate_resources_version","Retrieve Kenning resources version and check if it is compatible with currently used Kenning."]],"kenning.utils.resource_manager.ResourceManager.__init__":[[15,1,2,"kenning.utils.resource_manager.ResourceManager","args","Bases: object"],[15,1,2,"kenning.utils.resource_manager.ResourceManager","kwargs","Bases: object"]],"kenning.utils.resource_manager.ResourceManager.add_custom_url_schemes":[[15,1,2,0,"custom_url_schemes","Dictionary with custom url schemes entries."]],"kenning.utils.resource_manager.ResourceManager.get_resource":[[15,1,2,0,"output_path","Path to the output file."],[15,1,2,0,"uri","Resource URI."]],"kenning.utils.resource_manager.ResourceManager.set_cache_dir":[[15,1,2,0,"cache_dir_path","Path to be set as cache directory."]],"kenning.utils.resource_manager.ResourceManager.set_max_cache_size":[[15,1,2,0,"max_cache_size","Max cache size in bytes."]],"kenning.utils.resource_manager.ResourceURI":[[15,6,1,0,"origin","Returns the original string passed to the constructor."],[15,6,1,0,"parent","Get parent of the URI."],[15,6,1,0,"uri","Get URI of the resource."],[15,2,1,0,"with_name","Return new URI with changed name."],[15,2,1,0,"with_stem","Return new URI with changed stem."],[15,2,1,0,"with_suffix","Return new URI with changed suffix."]],"kenning.utils.resource_manager.ResourceURI.__init__":[[15,1,2,"kenning.utils.resource_manager.ResourceURI","uri_or_path","Bases: Path"]],"kenning.utils.resource_manager.ResourceURI.with_name":[[15,1,2,0,"name","New name to be used."]],"kenning.utils.resource_manager.ResourceURI.with_stem":[[15,1,2,0,"stem","New stem to be used."]],"kenning.utils.resource_manager.ResourceURI.with_suffix":[[15,1,2,0,"suffix","New suffix to be used."]]},"objnames":{"0":["py","class","Python class"],"1":["py","parameter","Python parameter"],"2":["py","method","Python method"],"3":["py","attribute","Python attribute"],"4":["py","module","Python module"],"5":["py","function","Python function"],"6":["py","property","Python property"]},"objtypes":{"0":"py:class","1":"py:parameter","2":"py:method","3":"py:attribute","4":"py:module","5":"py:function","6":"py:property"},"terms":{"":[0,1,2,3,4,5,6,7,9,10,11,14,15,16,17,20,21,23,24,25,26,27],"0":[0,2,3,4,6,8,9,10,11,12,14,15,16,20,21,22,24,25,27],"00":[8,10],"000":27,"000014":26,"000015":26,"00002":3,"00005":8,"0001":[0,9,14],"0003073369739186006":24,"000407":27,"0005":3,"000507":26,"000560":26,"000654":26,"001041":26,"001094":26,"001096":26,"001141":26,"001195":26,"001247":26,"001249":26,"001294":26,"001396":26,"001449":26,"001452":26,"001496":26,"001511":26,"003066142999159638":24,"0031105340278004203":24,"00390625":16,"0078125":26,"01":25,"018":26,"02033412":9,"03125":26,"039":26,"04":8,"040":26,"0409170272c2c8d800000000000000000000000097969906":3,"05":8,"051":26,"054":27,"062":10,"0625":26,"068584532658253":24,"07":3,"072745":27,"073839":27,"073933":27,"075138":27,"076":10,"076285":27,"0774157047271729":16,"089648437500003":24,"09":3,"097722158423":26,"0_05":8,"0_15":[8,10],"0_3":10,"0x00":21,"0x0000fff4":3,"0x01000000":3,"0x10016372":3,"0x2000a900":3,"0x2000afa0":3,"0x2ba01477":3,"0x4b":21,"0x61000000":3,"0xc":20,"1":[0,2,3,4,6,9,11,14,15,16,17,21,22,24,26,27],"10":[8,9,10,26],"1000":16,"10000":26,"1024":[20,21],"10263":26,"10264":26,"10269":26,"10270":26,"10454":26,"10455":26,"1048576":21,"10719":26,"10720":26,"11":[8,11,25,26],"115200":[20,26],"11622":26,"11623":26,"11690":26,"11691":26,"11840":26,"11841":26,"119":16,"12":[3,10,21,26],"120":10,"1234":[15,27],"12344":0,"12345":[2,3,15,16,21,26],"1234_12_5":12,"1234_21_5":12,"1234_29_1":12,"1234_29_5":12,"1234_3_5":12,"125":26,"127":6,"128":[2,10,16,20],"1280":20,"129":16,"13":[16,26],"130":8,"131072":3,"133333":26,"13671875":26,"13722":26,"13723":26,"13771":26,"13772":26,"14":[10,11,16,26],"14093":26,"14094":26,"1411999068705":26,"14180":26,"14181":26,"142":10,"14395":26,"14396":26,"14975":26,"14976":26,"15":[2,8,9,10,11,21,24,26,27],"15360":26,"15361":26,"15x":9,"16":[3,8,16,21,24,26],"16015625":26,"164325661097":26,"168":0,"17":26,"18":26,"188":0,"19":[4,16,26],"192":0,"1byte":21,"1e":8,"2":[3,4,8,15,16,21,26,27],"20":[2,10,26],"200":[2,27],"2000":3,"2020":25,"2023":3,"2025":25,"2048":20,"2059426531921169":24,"20703125":26,"21":26,"210366":3,"2108925288844":26,"22":26,"222":27,"224":16,"229375069":9,"23":26,"24":[11,26],"25":[15,16,26,27],"250000":26,"255":[4,16],"256":[3,16,20],"2560":20,"2578125":26,"26":[24,26],"2675842741318":26,"26953125":26,"27":[3,8,26],"28":26,"2814":26,"2815":26,"287460":26,"29":26,"2x":9,"3":[0,2,3,4,8,9,10,11,14,16,17,21,24,25,26,27],"30":[10,15,26],"3072":20,"31":[8,21,26],"3125":26,"3151576483133":26,"32":[0,9,10,14,16,20,21,26],"3203125":26,"32768":0,"33":26,"3333":3,"34":26,"345":10,"349":10,"35":[0,16,26],"354":27,"35546875":26,"36":26,"37":[10,14,26],"373":10,"38":[4,16,26],"380":8,"39":[3,15],"3x":9,"4":[2,3,8,10,16,21,24,26],"40":[9,10,26],"4054920288479":26,"406529":26,"4096":21,"41":[9,16,26],"416":16,"41796875":26,"421":8,"4235748410695":26,"43":26,"43359375":26,"4363":26,"4364":26,"4383":26,"4384":26,"44":26,"45":26,"451":10,"47":26,"48":26,"49":[16,26],"5":[2,10,11,15,16,21,26,27],"50":[0,9,14,22,26,27],"5000":6,"508":10,"50gb":23,"512":17,"52":16,"53":3,"537465":26,"5456":26,"5457":26,"550":11,"55078125":26,"55806884765625":24,"56":26,"5682944824213":26,"57":26,"5707":26,"5708":26,"579132":26,"5833348167468":26,"6":[2,3,21,26],"60":10,"608":[4,16,17],"608x608":17,"61":[8,26],"61328125":26,"61514549":9,"6171875":26,"62890625":26,"63":[21,26],"6370":26,"6371":26,"64":[8,20,21,26],"644399":26,"64453125":26,"65":16,"65234375":26,"66":26,"660":8,"6666666666666665":12,"67":26,"67578125":26,"68":26,"683232669":9,"6908":26,"6909":26,"6923":26,"6924":26,"7":[3,4,9,11,16,21,26],"71":10,"7175":26,"7176":26,"729675":26,"73828125":26,"7497":26,"7498":26,"75":[2,16],"7578125":26,"76":[4,16],"7612":26,"7613":26,"7655":26,"7656":26,"7734375":26,"7798":26,"7799":26,"7833":26,"7834":26,"7849":26,"7850":26,"78515625":26,"7909717876419":26,"79405698":9,"7_compiled_model":24,"7b":22,"8":[2,3,4,8,11,16,21,26],"8102040816":8,"8125":26,"813":8,"82":10,"8226":26,"8227":26,"8338435":3,"836312616794":26,"8367346939":10,"8515625":26,"853":8,"85625":24,"86328125":26,"87":20,"871":3,"8731":26,"8732":26,"8755":26,"8756":26,"892":27,"89453125":26,"9":[10,26,27],"9000":6,"9006802721":10,"9105":26,"9106":26,"9190476190":10,"92":8,"9299319728":8,"93359375":26,"9385":26,"9386":26,"9424":26,"9425":26,"948000":26,"9487005035":9,"9519662539":9,"952000":26,"953125":26,"956334":27,"9566448082813757":24,"9571990915922841":24,"957250":27,"957273098380732":24,"9572730984":9,"9574413909275928":24,"957823":27,"959105":27,"9605442177":10,"9609375":26,"9632653061":8,"965973551":9,"98828125":26,"995918":27,"9961899578173902":24,"9999":26,"A":[1,3,10,15,16,17,21],"And":[3,5,9,21],"As":[0,9,10,14,21,22,25],"At":[0,11],"But":16,"By":[2,4,15,21,22,23],"For":[0,2,3,4,6,7,8,9,10,11,14,15,16,20,22,23,24,25],"If":[0,1,2,11,14,15,16,17,21,22,23,25],"In":[1,2,3,4,6,8,9,10,11,12,14,15,16,17,20,21,22],"It":[0,1,2,3,7,9,10,11,14,15,16,20,21,22],"Not":[15,21],"ON":11,"On":[3,5,11,15],"One":[10,14],"Such":[2,9,14],"The":[0,1,2,3,4,5,6,7,8,9,10,11,14,15,16,17,20,21,22,23,24,25,26,27],"Then":[2,3,5,9,10,14,16,25],"There":[15,16,19,21,25],"These":[1,8,15,17,21,23,25],"To":[0,2,3,4,5,6,8,9,10,11,14,15,16,17,20,22,25],"With":[0,2,9,17,24,25],"_":[15,24],"__init__":16,"__main__":[26,27],"__module__":16,"__name__":16,"__version__":16,"_all_result":24,"_argumentgroup":15,"_cpus_perc":[15,19],"_dataindex":15,"_dict":22,"_get_io_specif":16,"_gh_convert":22,"_gpu_mem_util":[15,19],"_gpu_util":[15,19],"_list":22,"_mem_perc":[15,19],"_parse_stat":21,"_timestamp":[15,19],"aarch64":20,"abc":[15,21],"abi":7,"abl":[9,14,15],"about":[6,9,11,12,15,16,18,21,23,25],"abov":[0,2,3,4,5,8,9,11,14,15,16,17,21,22,25],"absent":15,"absolut":22,"abstract":[15,21],"abstractmethod":[15,21],"acceler":[0,1,7,15],"acceleromet":7,"accept":[0,2,8,14,15,16,21],"accept_cli":21,"access":[4,12,15,16,25],"accord":[1,15],"account":[2,15,21],"accumul":15,"accuraci":[0,8,9,10,15,24,27],"achiev":[9,10,13,20],"acknowledg":[15,21],"acm":3,"across":[9,19,25,26],"act":[1,11,14,15],"action":[0,1,3,14,15,17,26,27],"activ":[3,5,8,9,14,15,20,21],"activationapozrankprun":8,"activationmeanrankprun":8,"actual":[3,15,17,22],"ad":[0,1,6,7,9,10,11,12,14,15,16],"adagrad":1,"adam":[1,8,10,26],"adapt":1,"add":[9,11,14,15,16,21,22],"add_custom_url_schem":[15,22],"add_entri":15,"add_measur":15,"addit":[0,1,5,7,8,9,10,14,15,16,17,20,21,25],"addition":[0,16,22],"addon":25,"address":[0,6,14,15,21,22,25],"adequ":1,"adjust":[1,2,8,10,12,25],"advanc":[13,14],"advantag":10,"affect":[2,8,11,16,23],"aforement":21,"after":[1,2,7,10,15,16,17,21,23,25],"again":[0,9],"against":[9,21],"aggreg":[9,24],"agnost":6,"ai":[7,25],"ai8x_data_memory_kb":20,"ai8x_devic":20,"ai8x_device_id":20,"ai8x_weights_memory_kb":20,"ai8xcompil":20,"aim":25,"algorithm":[1,2],"all":[0,2,3,4,7,9,10,11,15,16,19,21,22,24,25,26],"alloc":15,"allow":[1,2,3,4,6,7,9,10,11,14,15,16,17,20,21,22,24,25,26],"almost":16,"along":[0,1,3,4,11,16,19,21,25],"alreadi":[0,3,7,9,15,21,22],"also":[0,1,2,4,6,7,8,9,10,11,14,15,16,17,21,22,25],"alter":9,"altern":[7,21],"alwai":[2,3,16,25],"among":[1,14],"amount":[0,2,23],"an":[0,1,4,6,7,8,10,11,13,14,15,16,17,21,22,25],"analog":[3,21],"analogdevicesinc":3,"analysi":[1,4,15,17],"analyz":[0,7],"ani":[0,1,4,6,10,14,15,16,17,21,22,25,26],"anomali":[12,16,18,26],"anomaly_detect":[2,3,16,26],"anomaly_detection_dataset":[16,26],"anomalydetectiondataset":[2,16,26],"anoth":[1,9,14,15,16,17,21,22,25],"answer":3,"antmicro":[0,2,3,4,5,6,7,8,9,10,11,14,15,16,20,22,25,26],"anyth":[14,15],"aocl":0,"aocl_sw_emu":0,"apach":[11,14,16,25],"apart":[8,9],"api":[12,13,14,16,21,25],"apoz":8,"app":[3,5,26],"appear":9,"append":[15,16],"append_index":15,"appli":[0,1,9,11,14,15,16,17],"applic":[0,1,2,3,6,12,13,14,15,19,20,25],"application_dir":26,"application_s":[2,15],"approach":[1,3,14,25],"appropri":[14,15,21],"apt":5,"ar":[0,1,2,3,4,6,8,9,10,11,14,15,16,17,19,20,21,22,23,24,25],"arbitrari":[15,17],"architectur":[2,7,15,20,21],"arg":[0,4,15,16],"arg_structur":15,"argcomplet":0,"argmax":16,"argpars":[0,15,16],"argparse_nam":[4,14,16,25],"args_manag":15,"argument":[2,6,8,9,12,13,14,15,20,21,22,24,25],"argument_nam":16,"argumentpars":15,"arguments_structur":[14,15,16],"argumentshandl":[12,16],"arm":20,"arm_cpu":20,"armv7":20,"around":3,"arrai":[0,15,16,17],"arriv":21,"arrow":15,"artifact":21,"as_dtyp":16,"asarrai":16,"ascii":21,"aspect":16,"assess":4,"assign":15,"associ":[1,15,17],"assum":[2,3,6,14,15,16],"astyp":16,"asynchron":21,"atom":3,"attempt":21,"attribut":[15,22],"attributeerror":15,"auc":26,"audio":[1,25],"augment":1,"auto":[2,3,26],"auto_flash":26,"auto_pytorch":[2,16],"autocomplet":[12,25],"autoencod":3,"autogener":[0,12,13,15],"autom":[1,14],"automat":[2,3,9,15,16,20,24],"automl":[12,18],"automl_conf_":2,"automl_quant":2,"automlmodel":[2,15,16],"autopytorch":[2,16],"autopytorchml":[2,15,16],"autopytorchmodel":[15,16],"avail":[1,2,3,6,7,8,9,12,13,14,15,16,17,18,22,23,24,25],"averag":[0,8,15],"avoid":2,"avx":[9,14],"avx2":[9,14,25],"awar":8,"axi":[16,26],"b":[2,3,11,21],"back":[7,15,21],"backend":7,"background":9,"bare":[12,15,18,20,22],"bare_met":20,"baremetalplatform":[7,15,20],"base":[0,1,2,3,4,5,7,8,9,10,11,14,15,16,17,20,21,24,25,27],"base64":0,"base_url_schem":22,"baselin":1,"baserealtimevisu":15,"bash":[0,2,3,20],"basic":[6,25],"batch":[0,3,8,9,10,14,15,27],"batch_norm":[3,26],"batch_siz":[0,9,10,14,15,16,26,27],"baud":20,"baudrat":[20,26],"becaus":[4,7,16,21],"becom":[10,21],"been":[3,15,21],"befor":[0,1,2,3,9,10,14,15,16,21,22,23],"begin":[3,15],"behav":22,"behavior":[7,14,23],"behaviour":21,"behind":1,"being":[2,15,21],"below":[0,2,4,6,8,10,11,14,15,16,21,22],"benchmark":[0,6,15,24,25,26,27],"benefit":1,"best":[1,2,13,15,16,24,25],"beta":3,"better":[1,8,10,14,25],"between":[0,1,3,9,14,15,16,21,25],"bgr":17,"bia":16,"bias":1,"big":0,"bigger":22,"bin":[3,5,11,20],"binari":[5,7,9,15,21],"binary_path":20,"bit":[2,9,10,20,21],"bitstream":1,"blob":15,"block":[9,12,13,14,15,17,21,24,25],"blog":7,"board":[2,3,5,7,12,15,26],"boil":[16,20],"bool":[14,15,16,21],"boolean":[3,16],"boost":9,"both":[0,9,15,16,17,21],"bound":[15,16],"box":[15,16],"brace":22,"branch":[20,22,26],"break":15,"breakpoint":3,"breed":[0,14,25,27],"bright":1,"bring":25,"browser":25,"bsd":21,"budger":2,"budget":2,"budget_typ":2,"buffer":[7,21],"bug":3,"build":[0,2,3,7,8,9,10,12,14,16,20,21,24,25,26],"build_dir":26,"built":[3,5,11,15,21],"builtin":4,"byte":[0,3,15,21],"bytecod":7,"bytes_based_protocol":21,"bytesbasedprotocol":[0,12],"c":[0,1,2,3,20,21,25],"ca":9,"cach":[12,15,23,25],"cache_dir_path":15,"calcul":[8,20],"calibr":[0,1,9,15,16],"calibration_dataset_gener":[15,16],"call":[0,1,3,9,15,16,21],"callabl":[15,21,22],"callback":21,"callback_max_sampl":[2,15],"cam_fram":[16,17],"camera":[0,15,17,25],"camera_dataprovid":[0,17],"cameradataprovid":[0,15,17],"can":[0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,20,21,22,23,24,25],"cannot":[2,10,14,15,21],"capabl":[9,10],"capac":3,"captur":[15,17],"carri":21,"cartesian":24,"case":[0,1,3,6,7,9,10,11,12,13,14,15,16,17,21,25],"cat":[2,3,14,16,25,26,27],"categori":1,"cats_nano":[2,16,26],"caus":[23,26],"ccach":5,"cd":[3,5,7,11,20,25],"centroid":10,"certain":[10,14,15,19,21,25],"cfg":[0,2,3,5,7,8,9,10,11,14,16,17,20,24,25,26],"chain":[6,14,15],"chanc":1,"chang":[1,2,3,5,8,9,11,14,15,21,22,25,26],"channel":[8,21],"chapter":[1,6,13,15,16],"characterist":[15,21],"chart":26,"check":[0,3,7,9,14,15,16,17,21,22,23,24,25],"check_convers":15,"check_statu":21,"checksum":[0,15],"checksumverifyerror":15,"child":[14,15],"chip":3,"chmod":3,"choos":[2,8,12,13,20],"chose":[10,20],"chosen":[15,16,20,24],"ci":[9,26,27],"cl":[0,3,9,16,27],"clang":11,"class":[1,2,7,8,9,12,14,15,17,18,19,21,22,25],"class_info":0,"class_nam":16,"classif":[0,1,4,5,7,8,9,10,12,14,15,16,22,24,25],"classifi":[0,7,14,15,16],"classify_bi":[14,27],"classmethod":[15,16],"clean":[15,16],"cleaner":22,"cleanup":[15,16,22],"clear":[15,22],"clear_cach":15,"cli":[10,12,23,25],"client":[0,6,14,15,17,21],"client_connect":15,"client_connected_callback":[15,21],"client_disconnected_callback":[15,21],"clip_grad_max_norm":26,"clock":3,"clone":[2,3,5,11,20,25],"close":[15,16],"cloud":9,"cluster_dens":10,"clusters_numb":10,"cmake":[5,11,20],"cmsi":[3,20],"cnn":2,"cnn_int8":2,"co":[7,22],"coco":[4,15],"coco_dataset":[4,25],"cocodataset2017":[4,25],"code":[1,4,16,21,25],"coeffici":8,"coefficientt":11,"collect":[0,3,4,8,9,14,15,16,19,25],"collector":[0,15,16],"column":3,"com":[0,2,3,4,5,6,7,8,9,10,11,14,15,16,20,22,25],"combin":[15,24,25],"come":[14,15,16],"command":[2,3,4,7,8,9,10,11,12,13,14,15,16,19,20,25],"comment":3,"common":[0,1,14,15,16,19],"common_voice_dataset":[4,25],"commonli":14,"commonvoicedataset":[4,25],"commun":[0,7,14,15,25],"compani":22,"compar":[7,8,9,10,12,15,18,21,25],"comparison":[2,3,5,8,10,12,25],"compat":[0,7,15,16,20,21,24],"compil":[0,2,3,5,7,11,12,13,15,16,18,19,20,21,22,25,26],"compilation_flag":20,"compile_use_vm":[11,27],"compiled_model":[11,14,24],"compiled_model_path":[0,2,3,7,8,9,10,11,14,15,16,24,25,26,27],"compiled_tflit":14,"compiled_tvm":14,"compiler_arg":7,"compiler_cl":0,"complet":[0,5,15,21,25],"complex":[3,6],"compliant":[3,11],"compon":[12,13,25],"compos":4,"composit":0,"compress":[10,15],"comput":[0,1,10,11,15,19,25],"compute_input_mean_std":15,"computing_statist":15,"concaten":15,"concurr":21,"condit":[1,15],"conf":[2,3,5,15],"confid":8,"config":[9,11,12,13,15,17,20,21,22,26],"config_json":24,"config_list":8,"configur":[0,2,3,4,6,7,8,9,11,14,15,16,17,21,24,25],"confirm":[15,21],"conflict":16,"conform":25,"confus":[0,9,14,19,27],"connect":[3,6,7,10,15,16,21,25],"consecut":[14,16],"consid":[3,4,9,17,24],"consist":[13,14,15,16,17,25],"consol":20,"constantli":21,"constrain":20,"constraint":20,"construct":[15,19],"constructor":[15,16,17,21],"consult":16,"consult_model_typ":15,"consum":[2,8],"contain":[0,2,3,4,5,9,10,11,13,14,15,16,18,19,21,23,24,25,26,27],"content":[3,15,21,25],"context":[0,15,27],"continu":[7,15,21],"contrast":1,"contribut":[2,8],"control":[0,3,15,25],"conv2d":[0,8],"conv2d_data_layout":[0,9,14,24,25,27],"conv2d_kernel_layout":[0,27],"conv_dil":2,"conv_strid":2,"convei":15,"conveni":9,"convers":[0,3,14,15,22,25],"convert":[0,4,9,11,15,16,22,25],"convert_input_to_byt":15,"convert_output_from_byt":15,"convert_to_onnx":0,"convolut":[1,8,11],"copi":[2,15],"copyright":25,"coral":[0,9],"core":[0,9,14,15,19,21,25],"correct":[0,2,21],"correctli":1,"correspond":[9,10,15,22],"cortex":[3,20],"cortex_m":3,"could":[9,15,21],"couldn":15,"count":26,"cover":15,"cp":11,"cpu":[0,3,7,9,12,14,15,16,19,20],"cpu0":26,"cpuexecutionprovid":11,"crash":[15,26],"creat":[0,2,3,4,5,6,9,11,12,13,14,15,16,20,21,22,25],"create_model_structur":16,"creation":15,"creator":16,"criteria":24,"criterion":8,"critic":0,"crop":1,"crossentropyloss":8,"crucial":[16,25],"csv":[0,2,3,4,16,26],"csv_file":[2,3,16,26],"ctrl":2,"cu121":26,"cubla":11,"cuda":[0,1],"cudaexecutionprovid":[11,17],"cudnn":11,"cudnncubla":11,"cumul":26,"curl":5,"curli":22,"current":[0,1,3,4,6,9,15,16,20,21,24,25],"current_protocol_ev":21,"curv":0,"custom":[2,3,12,15,16,17,21,23],"custom_url_schem":15,"cycl":[15,17],"dap":[3,20],"darknet":[0,15],"darknet_coco":[0,4,25],"data":[0,1,3,7,10,12,13,14,16,17,18,21,23,25],"datacollector":15,"dataconvert":[12,25,26,27],"datai":15,"dataprovid":[0,4,12,17,25],"dataprovidercl":0,"dataset":[0,2,4,7,8,9,10,11,12,13,14,16,19,21,22,23,24,25,26],"dataset_cl":0,"dataset_percentag":[0,15,16,25,26,27],"dataset_root":[0,2,3,7,8,9,10,11,14,16,24,25,26,27],"datasetiter":15,"datasetprovid":15,"datax":15,"dataxtest":15,"dataxtrain":15,"dataxv":15,"dataytest":15,"dataytrain":15,"datayv":15,"dcmake_build_typ":11,"dcmake_install_prefix":11,"dconfig_kenning_model_path":[2,3],"deal":13,"dearpygui":17,"debian":5,"debug":[0,3,7,23,26],"debugg":3,"decid":[10,25],"decoder_neuron_list":26,"decor":15,"decreas":[8,10],"dedic":[10,17,25],"deduc":23,"deep":[0,11,12,13,15,25],"def":[16,22],"default":[0,2,3,4,6,8,9,10,11,14,15,16,21,22,23,24,25,26,27],"default_optim":20,"default_platform":20,"defin":[0,2,8,9,10,11,12,13,15,17,20,21,22,23,24,25],"define_forbidden_claus":16,"definit":[2,12,15,17,24],"deinit":15,"deiniti":15,"deleg":0,"delegates_list":26,"delet":[15,22],"deliv":[0,14,15,16,17,21],"deliveri":15,"demo":[2,3],"demonstr":[2,3,9,11,16],"deni":21,"denot":[15,21],"dens":10,"deny_callback":21,"depend":[0,1,2,4,5,6,7,8,9,10,11,14,15,16,20,21,23,24,25],"dependency_awar":8,"depict":15,"deploi":[1,11,13,14],"deploy":[6,12,13,14,18,25],"depth":13,"dequant":16,"deriv":[2,9,15],"derive_io_spec_from_json_param":[15,16],"describ":[0,1,3,6,13,15,16,17,19,24,25],"descript":[1,4,13,14,15,16,20,25],"design":[1,9,15],"desir":9,"desktop":[3,14],"despit":[2,10],"det":16,"detach":[15,16],"detach_from_output":15,"detach_from_sourc":15,"detail":[0,3,4,7,12,14,15,16,20,25],"detect":[0,1,4,9,11,12,15,16,17,18,25,26],"detection_and_segment":[4,16],"detection_data":[16,17],"detection_output":[4,16,17],"detection_visu":[0,16],"detectionvisu":[0,15,16],"detectobject":[4,16,17],"detector":0,"determin":[0,2,14,15],"dev":[0,3,5,17,20],"devboard":0,"develop":[7,12,13,14,15,25],"deviat":[16,26,27],"devic":[0,1,3,5,7,9,12,13,15,16,17,19,20,21,25,27],"dextra_conf_fil":[2,3,5],"dfu":5,"dict":[15,16,21,22],"dict_to_tupl":0,"dictionari":[14,15,16,17,20,22],"did":4,"differ":[1,3,8,9,11,14,15,16,24],"differenti":21,"dimens":[15,17],"dir":[0,6,9,11,26,27],"direct":[14,15],"directli":[2,3,6,11,14,15,16,20],"director":3,"directori":[0,2,3,5,7,9,14,15,16,22,23,25],"disabl":[0,9,23],"disable_from_logit":[10,26],"disable_opcode_count":26,"disable_performance_measur":[15,26,27],"disable_profil":26,"discard":3,"disconnect":[15,21],"discoveri":20,"displai":[12,14,15,16,18,25],"display_nam":20,"distanc":16,"distil":1,"distinguish":[15,21,25],"distribut":[5,9,11,26],"dkenning_model_path":3,"dl":[3,22],"do":[2,3,9,10,15,21,25],"doc":[23,25,26,27],"docker":[2,3,7,20],"docstr":[0,4],"document":[0,5,6,9,11,13,15,16,17,20,25],"doe":[6,9,14,15,16,21,22,23,25],"dog":[14,25,27],"domain":3,"done":[0,3,4,14,15,22,23],"dostr":21,"dot":14,"down":[6,16,20],"download":[0,3,7,9,11,14,15,17,21,22,23,25],"download_dataset":[14,15,26,27],"download_dataset_fun":15,"download_optimized_model_callback":[15,21],"download_output":[15,21],"download_output_callback":[15,21],"download_statist":[15,21],"download_stats_callback":[15,21],"dpidr":3,"draw":25,"drop":[1,6],"dropout_r":[2,26],"dts2repl":20,"dtype":[0,4,15,16,17],"due":[3,26],"dummi":8,"dump":[7,26],"durat":[15,27],"dure":[0,1,3,8,9,13,15,16,17,26,27],"dynam":[3,21],"e":[0,1,2,3,7,8,9,14,15,16,17,20,21,22,25],"eabi":20,"each":[0,1,3,4,6,9,14,15,16,17,21,22,23,24,25],"earli":1,"easi":[9,14,21,22],"easili":[9,25],"echo":11,"edg":[0,9,13],"edgetpu":[0,9,25],"edit":[6,25],"editor":[6,25],"effici":[1,9,25],"eg":[0,15],"egg":25,"either":[0,1,2,3,5,6,11,14,15,16,17,21,22],"elaps":15,"element":[0,11,14,15,16,21],"elf":[5,7,20],"els":16,"embed":[0,19,25],"emit":7,"emphas":[14,16],"empir":15,"empti":[15,16,21],"emul":7,"enabl":[0,3,7,8,15,21,23],"encapsul":[3,20],"enclos":22,"encod":[0,21],"encoder_neuron_list":[2,3,26],"end":[0,1,2,3,15,16,21,25],"endian":[0,3],"enhanc":25,"enough":22,"ensur":[2,3,5,8,10,11,16],"entir":[1,9,10,25],"entireti":25,"entiti":15,"entri":[2,3,7,14,15,16],"enum":[2,14,15,16,21,25],"enumer":16,"environ":[0,1,4,7,12,13,15,22,26,27],"environment":[7,23],"epoch":[0,1,2,3,8,9,10,15,26],"equal":[10,11,15,17,21],"eras":[3,20],"error":[0,6,11,14,16,21],"error_recoveri":[21,26],"especi":[1,4,25],"essenti":21,"establish":7,"etc":[1,6,13,14,15,21],"evalu":[0,1,4,9,11,12,13,15,18,19,20,23,25,26],"event":21,"event_act":21,"everi":[9,15,19,24],"everyth":3,"exampl":[0,2,3,4,6,8,9,10,11,14,15,16,18,20,22,24,25],"except":[15,16,21,22,25],"excepthook":23,"exclud":[2,8],"exclude_last_lay":8,"exclus":1,"execut":[0,1,2,3,4,7,8,9,12,13,14,15,16,21,24,25],"execution_provid":[11,17],"executor":[5,11],"exist":[1,9,11,14,15,17,20,21,25],"exit":[0,15],"expandus":22,"expect":[3,15,17,21],"experi":9,"explicit":15,"explicitli":15,"export":[2,3,10,11,15,20],"exportpath":15,"expos":3,"express":4,"ext":16,"ext_dev":0,"extend":[15,16,25],"extens":[2,7,9,14,15,21],"extern":[0,3,15],"external_calibration_dataset":[0,15,26,27],"extra":[6,25],"extra_build_arg":26,"extra_target":[2,26],"extract":[0,15],"extract_model":15,"extract_output":15,"extracting_output":15,"extrem":25,"f":[7,16,22],"f1":[2,16],"f32":9,"face":22,"facilit":15,"fact":[10,22],"fail":[15,21,26],"failur":[2,21,26],"failure_callback":21,"fairli":9,"fall":0,"fals":[2,3,7,10,11,14,15,16,21,26,27],"famili":17,"fast":[9,25],"faster":9,"fc":16,"fc_automl":16,"fcnetwork":16,"featur":[0,1,2,7,25],"fed":15,"feed":15,"fetch":[0,9,14,15],"fetch_input":15,"few":[8,10,16],"fewer":8,"field":[11,14,15,16,17,20,21,24],"figur":[0,15],"file":[0,2,3,4,5,6,7,9,11,14,15,16,17,20,21,22,24,25],"filesystem":[17,22],"fill":15,"filter":8,"final":[1,3,5,9,15,21],"find":[1,2,3,6,15,20,21],"finder":1,"fine":[1,8,10,24,25],"finetuning_batch_s":8,"finetuning_epoch":8,"finetuning_learning_r":8,"finish":[7,15,16,21],"finish_act":15,"finish_ev":21,"first":[2,3,4,5,9,10,14,15,16,17,21,27],"firstli":[15,16],"fit":[1,2,14,15],"flag":[0,4,7,9,10,11,15,16,20,25],"flash":20,"flash_size_kb":20,"flat":[7,20],"flatbuff":[3,9],"float":[9,15,16,21],"float16":25,"float32":[2,3,4,9,14,16,25,26],"flow":[0,4,9,12,13,14,17,18,25,26],"flow_scenario_detect":17,"focu":9,"focus":[3,9,25],"folder":2,"follow":[0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,20,21,22,24,25,26,27],"forbidden":16,"forc":[0,15],"force_download_dataset":[15,26,27],"force_onnx":15,"forcibli":21,"form":[0,15,16,19,21,25],"form_argpars":[0,15,16,25],"form_automl_schema":15,"form_parameterschema":[15,16],"format":[0,3,4,7,8,9,11,14,15,16,17,19,21,22,24,25],"former":[0,25],"forward":3,"found":[0,1,5,14,15,16,17,20,25],"four":16,"fp16":[0,1],"fp32":[0,1,9,25],"fpga":1,"fraction":[0,15],"fragment":22,"frame":[15,16,17],"framework":[2,4,6,11,12,13,15,16,21,25,26,27],"from":[0,2,3,6,7,8,9,10,11,12,14,15,16,17,20,21,22,23,24,25],"from_argpars":[0,15,16,25],"from_fil":[15,16],"from_json":15,"from_keras_model":16,"from_numpi":16,"from_parameterschema":16,"from_saved_model":16,"ftdi_ft231x_usb_uart_":20,"fu740":20,"full":[2,9,14,15,16,22,24],"fulli":[11,16,20],"function":[0,1,3,4,15,16,17,21,23,25],"further":[2,3,9,15,21],"furthermor":14,"fusion":[1,15],"fuzzi":25,"fw":3,"g":[0,1,2,3,5,7,8,9,14,15,16,17,20,21,22,25,26,27],"g_mean":24,"gain":4,"galleri":[12,13],"gather":[0,13,15,21,24],"gather_data":21,"gather_predict":26,"gb":22,"gcc":[5,11,20],"gdb":3,"gelu":8,"gener":[3,4,5,7,8,9,10,11,12,13,14,15,16,18,21,24,25],"general_info":15,"gestur":7,"get":[0,3,9,11,14,15,16,17,21,25],"get_available_ram":15,"get_best_config":15,"get_class_nam":[15,16],"get_data":15,"get_data_unload":15,"get_default_protocol":15,"get_framework_and_vers":[15,16],"get_input_detail":16,"get_input_format":15,"get_input_mean_std":15,"get_input_typ":15,"get_io_spec_path":15,"get_io_specif":[15,16,17],"get_io_specification_from_dataset":16,"get_io_specification_from_model":[15,16],"get_measur":15,"get_model_s":15,"get_optimized_model_s":15,"get_output_detail":16,"get_output_format":15,"get_path":15,"get_resourc":[15,22],"get_signature_runn":16,"get_spec_path":15,"get_statist":15,"get_tim":15,"get_time_func":[15,21],"get_valu":15,"gh":[16,20,22,26],"ghcr":[2,3,7,20],"git":[0,2,3,4,5,6,8,9,10,11,14,16,20,22,25],"github":[0,2,3,4,5,6,8,9,10,11,14,15,16,20,22,25,26,27],"githubusercont":[7,22],"give":[15,19,21],"given":[0,1,2,3,9,14,15,17,20,21,25],"global":[15,17],"gluoncv":23,"gnu":[3,11],"go":[9,11],"goe":[1,15],"googl":[0,1,9],"got":15,"gpl":3,"gpu":[0,2,8,9,14,15,19,25],"grab":17,"gracefulli":15,"graph":[6,15],"graph_data":[2,3],"graphic":25,"great":9,"greater":[3,10],"greatli":2,"green":15,"grei":15,"grid_search":24,"ground":[7,15,19],"group":[0,4,8,10,15,16,25],"guarante":[15,21],"gui":[6,16,17],"guid":13,"h":[0,25],"h5":[0,7,9,10,14,15,16,22,24,25,27],"ha":[2,3,8,9,10,15,16,17,21,22,24],"halid":1,"halt":3,"hand":1,"handl":[15,16,22],"happen":[9,19],"hardwar":[1,2,3,7,9,10,12,15,18,21,25],"hardwarem":3,"harm":9,"has_payload":21,"have":[2,8,14,15,16,21,22,25],"header":[3,26,27],"height":[0,4],"held":15,"help":[0,6,16],"helper":[4,16],"henc":3,"here":[0,1,3,7,9,10,14,15,16,21],"hex":3,"hexagon":0,"hf":22,"hidden_activ":26,"hierarchi":21,"hifiv":20,"hifive_unmatch":20,"highli":9,"highlight":24,"hint":16,"histogram":7,"hold":[3,10,11,16],"home":[0,23,26,27],"host":[0,6,14,15,21,25,26,27],"hot":15,"how":[0,2,3,6,7,9,10,11,13,16,20,21,23,24,25],"howev":[0,3,6],"html":[2,3,5,7,8,10,25,26],"http":[0,2,3,4,5,6,7,8,9,10,11,14,15,16,20,22,25],"hub":22,"hug":22,"huggingfac":22,"huggingface_hub":22,"human":[7,16],"hw":[3,20],"hybrid":0,"hyperparamet":[1,2],"i":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,17,19,20,21,22,23,24,25,26,27],"iadd":15,"id":[0,2,3,4,15,16,20,22,24,26],"identifi":21,"idl":15,"if00":20,"ignor":[3,8],"iiit":27,"ilp32":7,"imag":[0,1,2,3,4,7,9,11,14,15,17,20,25],"image_height":[0,11],"image_memory_layout":[8,14,27],"image_width":[0,11],"imagenet":16,"imagenet_dataset":[4,25],"imagenetdataset":[4,25],"img":[0,9,11,26,27],"implement":[0,1,2,3,6,9,12,14,22],"import":[0,4,15,16,22,25],"importpath":15,"improv":[1,9,10,15],"in_":16,"includ":[1,7,9,11,15,16,17,21,22,25],"incom":21,"incomingeventtyp":21,"incomingtransmiss":21,"incompat":6,"incomplet":15,"increas":[2,8,10],"indefinit":21,"indic":[9,10,15,16,19],"infer":[3,5,7,8,12,14,15,16,21,23,25],"inference_batch_s":[0,2,3,11,16,26,27],"inference_input_typ":[2,3,9,14,16,25,26],"inference_output_typ":[2,3,9,14,16,25,26],"inference_perform":0,"inference_runn":0,"inference_serv":[0,14,25],"inference_session_end":15,"inference_session_start":15,"inference_step_callback":15,"inference_test":[0,14,25],"inferenceinputtyp":[16,25],"inferenceoutputtyp":[16,25],"inferencetime_mean":24,"inferencetime_median":24,"inferencetime_std":24,"infinit":[15,21],"influenc":[2,13,23],"info":[0,2,3,5,7,14,25,27],"inform":[2,6,9,10,12,14,15,16,18,19,20,21,23,25],"infrastructur":20,"inherit":[9,14,15,16,21,25],"init":[2,3,15,16,20],"initi":[2,5,15,21],"initialis":3,"initialize_cli":[15,21],"initialize_measur":15,"initialize_serv":[15,21],"initialvaluefunc":15,"initvaluefunc":15,"inner":[15,21],"input":[0,1,3,4,7,8,9,11,14,15,17,21,22,25,26,27],"input_0":16,"input_1":16,"input_color_format":17,"input_data":[15,16],"input_dtyp":0,"input_height":17,"input_memory_layout":17,"input_model_path":[15,25],"input_nam":17,"input_shap":16,"input_spec":15,"input_width":17,"inputdata":15,"inputmodelpath":16,"inputs_sourc":15,"inputs_spec":15,"inputtyp":[15,16],"insid":[21,22],"instal":[0,2,4,7,8,9,10,12,13,14,16,20,22,23],"instanc":[1,6,9,12,15,17,18,21,22,23],"instance_segment":[4,11,25],"instanti":15,"instead":[9,10,21,24,25],"instruct":[2,3,7,22,25],"int":[7,14,15,16,21],"int4":1,"int64":16,"int8":[0,1,2,9,14,16,25],"int8_tvm":[9,14,25],"int_det":16,"integ":[1,2,3,9,10,15],"integr":[6,7,13,25],"intellig":[8,25],"interact":15,"interconnect":9,"interfac":[3,12,14,15,16,20,21,25],"intermedi":[1,2,3,15],"intern":[0,15],"interpret":[9,16,17,22],"introduc":[1,2,15,21],"introduct":12,"intuit":1,"invalid":[15,21],"invalidargumentserror":15,"invalidschemaerror":15,"invok":[3,15],"involv":1,"io":[2,3,7,15,16,20,21],"io_spec":[15,16,21],"io_spec_seri":21,"io_specif":15,"iointerfac":15,"iospec":[15,21],"iospec_struct_field":21,"iot":1,"iou":15,"ip":[15,21],"ire":[2,3,4,12,15,18,20,22,25],"iree_runtim":20,"ireecompil":[4,7,20,25],"ireeruntim":4,"is_host_messag":21,"is_ken":21,"is_zephyr":21,"issu":25,"item":16,"item_rang":[2,16],"iter":[15,17],"iter_test":15,"iter_train":15,"iter_v":15,"its":[0,2,6,9,12,13,15,16,17,20,21,25,26],"itself":[15,21],"j":11,"java":1,"jetson":19,"jitter":1,"job":21,"join":21,"jq":5,"json":[0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,19,20,21,24,25],"json_cfg":0,"json_dict":[15,16],"json_flow_runn":17,"jsonconfig":[6,7],"jsonschema":15,"just":[0,3,9,15,21],"k":10,"kaggl":1,"kb":[15,26],"kcomm":2,"keep":9,"kei":[9,14,15,16,20,22],"ken":[2,8,9,10,11,13,24,26,27],"kenn":15,"kenning_cache_dir":[12,22],"kenning_computer_vision_msg":15,"kenning_disable_io_valid":12,"kenning_docs_venv":12,"kenning_enable_all_log":12,"kenning_max_cache_s":[12,22],"kenning_protocol":21,"kenning_use_default_excepthook":12,"kenningflow":[12,13],"kenningprotocol":[12,15],"kera":[0,7,9,15,16,25,27],"kerasconvers":16,"kernel":[0,8],"keyparam":4,"keyword":[15,16],"khz":3,"kib":3,"kill_ev":21,"kind":0,"kit":[12,18,20,26],"know":10,"kwarg":15,"kzr_build":[2,26],"kzr_quant_build":2,"l":2,"label":[3,16],"lack":3,"lambda":[15,22],"languag":[1,15],"larg":[2,9,14,15,22,26],"larger":[1,8,9,10,25],"largest":1,"last":[8,15,17,21],"last_act":15,"lastli":[3,15],"latent_dim":26,"later":[0,1,7,11,14,15,16,21,24,25],"latest":[2,3,5,7,15,20,21],"latter":[0,14,17,25],"layer":[1,8,10,11,15,16,25,26],"layout":[0,14],"ld_library_path":11,"ldconfig":11,"learn":[0,3,9,12,13,15,25],"learning_r":[0,9,14,26,27],"least":[2,8,15,16],"leav":[0,15],"left":6,"legal":15,"len":16,"length":[15,16,17],"let":[2,3,4,5,7,9,16,25],"level":[0,15,16,21,27],"li":11,"lib":[11,26,27],"lib64":11,"libdarknet":[0,27],"libdarknet_path":[0,27],"libedgetpu":0,"libmagic1":5,"libncurses5":3,"librari":[0,1,9,10,11,12,14,15,16,23],"libsdl2":5,"licens":3,"life":[1,15],"lightweight":9,"like":[0,1,3,8,9,10,14,15,16,21,22,23,24,25],"limit":[0,2,3,4,21],"line":[2,11,12,13,14,15,16,25],"linear":[8,15,16],"link":[9,21,22],"linux":[5,7,11,20],"list":[0,1,2,3,5,9,11,14,15,16,17,19,21,22,24,25],"list_cached_fil":15,"list_class":0,"list_fil":22,"list_rang":[2,16],"listen":[3,21],"listen_block":21,"listen_to_server_log":[15,21],"lite":[14,15,16,25],"littl":[0,3],"llext":21,"llext_binary_path":[26,27],"llvm":[0,7,9,11,14,24,25,27],"load":[0,6,7,9,14,15,16,21,25],"load_input":15,"load_input_from_byt":15,"load_io_specif":[15,16],"load_model":[15,16],"loader":1,"local":[0,2,3,11,12,15,16,17,20,22,25],"localhost":21,"localplatform":[11,14,15,27],"locat":[0,1,2,11,14,15,22,26,27],"log":[0,3,6,9,14,15,21,22,23],"log_failur":21,"logdir":[0,9,14,27],"logic":[15,21],"long":14,"longer":15,"look":[0,2,3,9,11,14,16,17,20,24,25],"loop":[7,15,21],"loss":[1,3,9,15,26],"loss_beta":26,"loss_capac":26,"lot":[15,23,25],"low":9,"lower":[2,16],"lr":1,"m":[0,7,11,16,20,26,27],"m4":[2,3,20,26],"machin":[1,7,15,21],"made":15,"magic":7,"magic_wand":[7,22],"magic_wand_dataset":[4,7,25],"magic_wand_fp32":7,"magicwanddataset":[4,7,25],"magicwandmodelwrapp":[4,7,25],"mai":[0,1,2,3,9,11,14,15,16,21,22,23,25],"main":[2,7,10,11,15,20,22,26],"make":[2,4,5,8,11,15,16,21],"manag":[3,7,12,13,15,18,21,22,25],"mandatori":14,"mani":[9,21],"manner":16,"manual":[7,8],"map":[7,15,16,21],"march":20,"mark":[15,23],"markdown":[3,9,25],"mask":[1,16,21],"match":[15,16],"matric":[0,10],"matrix":[9,14,15,19,25,27],"matter":[9,11,16],"matur":25,"max":[15,22,24],"max32625pico":3,"max32690":[12,18,20,26],"max32690evkit":[2,3,20,26],"max32690evkit_max32690_m4":3,"max32690fthr":20,"max32960":[2,3],"max32xxx":3,"max78002":20,"max78002evkit":20,"max_budget":[2,16],"max_cache_s":15,"max_message_s":21,"maxim":[3,24],"maximmicrossdk_linux":3,"maximsdk":3,"maximum":[0,2,21,22,23,26,27],"mb":26,"mcpu":[9,14,20,25],"mcu":[2,3],"md":[2,3,5,7,8,9,10,11,25,26,27],"mean":[0,4,8,9,14,15,16,21,25,27],"mean_precis":24,"mean_rank":8,"mean_sensit":24,"meant":[15,16,21],"measur":[1,3,5,6,7,8,9,10,11,12,13,14,21,24,25,27],"measurement_typ":15,"measurementnam":15,"measurementscollector":[15,25],"measurementtyp":15,"mechan":[21,23],"median":[26,27],"memori":[0,2,8,9,14,15,17,19,20],"mendel":0,"mention":25,"menu":6,"messag":[0,4,15],"message_s":21,"message_typ":21,"messages_s":21,"metadata":[12,15,17],"metal":[0,12,15,18,20,22],"method":[0,3,8,9,10,14,17,19,22,25],"metric":[0,1,2,7,8,9,12,14,15,24],"meximum":21,"microcontrol":5,"microphon":15,"microtvm":2,"min":24,"min_budget":[2,16],"minim":[7,16,24],"minimum":[26,27],"minor":9,"minut":2,"miscellan":16,"miss":[4,15,23],"mistral":22,"mistralai":22,"mix":1,"mkdir":[2,3,5,7,11],"ml":[15,21],"mobilenetv2":[8,9,10,14,15,25],"mode":[3,8,21],"model":[4,6,12,13,17,18,20,21,22,24,25],"model_class":16,"model_cont":16,"model_framework":[7,11,25,26,27],"model_insert":[4,25],"model_nam":[8,9,14,15,16,25,26,27],"model_param":15,"model_params_from_context":16,"model_path":[0,3,4,7,8,9,10,11,14,15,16,17,21,22,24,25,26,27],"model_prepar":[15,16],"model_train":[0,25],"model_vers":16,"model_wrapp":[3,7,8,9,10,11,14,15,16,17,24,25,26,27],"modelentri":15,"modelframework":25,"modelgener":15,"modelinsert":[4,25],"modelnotloadederror":15,"modelpath":[14,16],"modelrunn":15,"modelruntime_runn":17,"modelruntimerunn":[15,17],"modelsdir":15,"modelwrapp":[0,2,3,4,7,8,9,10,11,12,14,17,24,25,26,27],"modelwrapper_cl":0,"modelwrapper_dataconvert":[26,27],"modelwrappercl":0,"modelwrapperdataconvert":[15,26,27],"modif":15,"modifi":[1,8,16,22,25],"modul":[0,4,5,7,9,14,15,16,17,19],"modular":25,"moduleiospecificationformaterror":15,"monitor":[7,21],"mono":5,"more":[0,2,3,4,6,7,8,9,10,14,15,16,17,22,24,25],"moreov":[8,15],"most":[0,1,9,10,11,14,15,24,25],"msdk":3,"msg":21,"msp":3,"much":[0,1,2,16],"multi":21,"multilib":5,"multipl":[1,9,13,16,17,21,24,25],"must":[15,17],"mutual":1,"mxnet":[23,25],"my_optim":16,"n":[3,15,21],"n_best_model":[2,15,16],"name":[0,2,3,4,7,9,11,14,15,16,20,22,26,27],"name_print":0,"nameprint":0,"namespac":15,"nanosecond":15,"nativ":[3,6,8,12,15,25],"native_":9,"natur":25,"nchw":[0,8,9,14,17,24,25],"ndarrai":[15,16,17],"ndim":17,"necess":25,"necessari":[4,7,9,10,11,14,15,25],"necessarili":16,"need":[0,1,3,5,7,8,9,10,11,14,15,16,17,21,25],"neg":21,"neglig":9,"neither":21,"netloc":22,"netloc_list":22,"network":[1,8,9,10,11,14,15,16,21,25],"networkprotocol":[0,12,14],"neural":[8,11,16,25],"neuron":[8,16],"new":[1,9,10,11,12,13,15,17,21],"new_nam":16,"new_spec":16,"newer":25,"newli":[16,20],"next":[3,5,14,15,17],"nhwc":[0,14,24,27],"ninja":5,"nn":[4,8,16],"nni":[8,25],"nni_prun":[4,8,25],"nnipruningoptim":[4,8,25],"node":[6,16],"nois":23,"non":[2,15,16,21,22],"none":[15,16,17,21,22,25],"nor":21,"norm":3,"normal":[1,8,10,16,25],"notabl":14,"note":[7,9,25],"notifi":3,"notimplementederror":[16,25],"notsupportederror":[15,21],"now":[0,2,3,5,17],"np":[15,16],"nproc":11,"nreset":3,"ntrst":3,"null":[11,26,27],"nullabl":16,"num":[0,3,9],"num_epoch":[0,9,14,26,27],"num_featur":16,"num_thread":26,"number":[0,1,2,3,8,10,15,21,26],"number_of_batch":26,"numer":[3,16],"numpi":[4,15,16,17,25],"nvcc":11,"nvcc_append_flag":11,"nvic0":26,"nvidia":[19,25],"nvidia_perf":25,"nvml":11,"nvptx":0,"nvrtc":11,"o":[0,3,7,12,14,17],"object":[0,1,9,11,14,15,16,17,21,25],"object_detect":[0,4,11,17,25],"objectdetectionsegmentationdataset":4,"observ":[0,3,15,25],"obtain":[3,7,15,16,17],"occur":1,"occurr":3,"oct":1,"off":25,"offset":21,"often":10,"old":22,"old_nam":16,"oldest":22,"omit":21,"onc":[1,2,3,15],"one":[1,2,3,4,9,10,11,13,14,15,16,17,21,24,25],"ones":[2,16],"ongo":15,"onli":[0,3,4,5,9,10,11,14,15,16,19,20,21,24,26],"onnx":[0,4,15,17,25],"onnx2tf":25,"onnx_export":15,"onnx_import":15,"onnxcompil":[4,11,25],"onnxconvers":[0,4,12],"onnxconvert":25,"onnxruntim":[4,11,17,25],"onnxruntime_gpu":11,"onnxyolov4":[4,17,25],"op_typ":8,"open":[0,1,3,4,7,15,16,25],"open_images_classes_extractor":[0,4],"open_images_dataset":[4,11,25],"opencl":[0,1],"opengl":1,"openimagesdatasetv6":[4,11,15,25],"openocd":[3,26],"openocd_flash_cmd":20,"openocd_path":26,"oper":[0,1,3,9,14,15,21],"opsset":16,"opt":[0,20,27],"opt_level":[0,9,11,14,24,27],"optim":[0,2,3,4,5,6,7,8,10,12,13,16,17,18,19,20,21,25,26,27],"optimiz":24,"optimization_paramet":24,"optimization_runn":24,"optimize_metr":[2,15,16],"optimize_model":21,"optimized_measurementspath":15,"optimizers_cfg":[15,21],"optimizing_model":15,"option":[0,2,6,7,8,14,15,16,17,21,22,23,24,25],"orang":15,"order":[1,2,3,6,8,9,10,14,15,16,17,20,21,23],"org":3,"origin":[1,8,10,15],"other":[0,1,3,4,6,7,8,9,10,14,15,16,17,20,21,23,25],"otherwis":[15,21],"ouput":15,"our":9,"out":[3,9,16,24,25],"outcom":14,"outlin":21,"output":[0,1,3,4,7,8,9,10,11,12,14,15,17,20,21,22,25],"output_0":16,"output_activ":[2,26],"output_collector":0,"output_conversion_funct":[11,27],"output_data":[15,16],"output_directori":[2,15,16],"output_height":16,"output_nam":17,"output_path":[2,15,24,26],"output_spec":15,"output_width":16,"outputcollector":[0,4,12,16,17,25],"outputdata":15,"outputtyp":16,"over":[8,9,15,21,24,25,26],"overal":[0,15,19],"overfit":1,"overrid":[2,15,16,21],"overridden":[15,16,23,25],"override_onli":15,"overview":[4,12],"overwritten":22,"own":[15,21],"oxford":27,"p":[2,3,5,7],"pack":[17,21],"packag":[7,14,23,26],"packet":[0,14,21],"packet_s":[0,14,21],"page":1,"pair":15,"parallel":15,"param":[3,22],"paramet":[0,1,2,3,7,8,9,10,11,14,15,16,17,19,20,21,22,24,25,27],"parameterschema":15,"params_dict":22,"parent":15,"pars":[0,3,7,14,15,16,17,20,21,22,25],"parse_io_specification_from_json":15,"parser":[15,25],"part":[3,15,21,22,24,25],"particular":[1,4,9,15,24,25],"pass":[0,9,14,15,16,17,21,22,23,25],"passthrough":11,"patch":5,"path":[0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,20,21,22,23,24,25,26,27],"path_list":22,"pathlib":[15,16,21,22,25],"pathoruri":[15,16],"pattern":15,"pc":[3,7],"per":[15,19,21,26],"percentag":[0,8,15],"perf_count":[15,21],"perform":[1,2,4,5,7,8,9,10,11,12,14,15,17,24,25],"period":1,"persondetectionmodelwrapp":[4,25],"pet":[0,9,12,15,16,24,25],"pet_dataset":[0,4,8,9,10,14,16,24,25,27],"petdataset":[0,4,8,9,10,14,15,16,24,25,27],"physic":7,"pick":2,"ping":21,"pip":[0,3,4,5,6,8,9,10,11,14,16,22],"pip3":[2,20],"pipelin":[0,2,7,10,12,13,16,18,19,20,25],"pipeline_manag":[6,25],"pipelinerunn":15,"place":[15,17],"platform":[2,3,7,9,11,12,14,16,19,21,22,25,26,27],"platform_resc_path":[7,20,26],"platforms_definit":[15,20,26,27],"pleas":[21,25],"plot":[8,9,11,25],"point":[1,9,11,14,15,16,26],"pointer":15,"polici":24,"polyglot":7,"pool":21,"pool_dil":2,"pool_strid":2,"popd":2,"popular":1,"port":[0,3,6,14,20,21,25,26],"port0":20,"posit":[0,4,8,17],"possibl":[0,1,2,3,9,11,14,15,16,21,22,24,25],"post":15,"post_start_command":[7,20,26],"postprocess":[3,9,14,15,16,25],"postprocess_output":[15,16],"potenti":20,"pre":[0,1,3],"precis":[0,1,9,10,15,26,27],"predefin":15,"predict":[3,9,14,15,16,17,19,25],"prefer":11,"prefix":[9,15,19],"prepar":[12,15,16,21,25],"prepare_external_calibration_dataset":15,"prepare_framework":15,"prepare_input_sampl":15,"prepare_io_specif":15,"prepare_loc":15,"prepare_model":[15,16],"prepare_modul":[2,3,5],"prepare_output_sampl":15,"prepare_renod":5,"prepare_zephyr_env":[2,3,5,20],"preprocess":[1,3,9,15,16,17,21,25],"preprocess_input":[15,16],"preprocess_model_to_upload":15,"prequantized_dtyp":[15,16],"presenc":9,"present":[0,8,9,10,15,16,17,21,26],"preserv":15,"preserve_spars":10,"press":[2,15],"pretrain":[3,10,13],"prevent":[1,8,17],"previou":[3,9,11,14,15,16,17],"previous":[5,11,14],"previous_block":15,"print":[0,15,21,22],"privileg":3,"probe":15,"problem":[1,3,15,16,19,25],"proce":[2,3],"procedur":1,"process":[0,1,2,3,7,8,9,10,13,14,16,17,19,21,25,26],"process_input_callback":[15,21],"process_output":[15,16],"processed_input":16,"processed_output":16,"processing_input":[15,21],"processor":3,"produc":3,"product":[9,24],"profil":7,"profiler_dump_path":[7,26],"profiler_interval_step":26,"program":[1,15,23],"programm":3,"progress":[15,21],"project":[3,4,13,25],"prompt":[3,21],"proper":[1,9,11,15],"properli":[0,1],"properti":[6,15],"protocol":[0,3,7,12,14,25,26],"protocol_cl":0,"protocolev":21,"protocolfailurecallback":21,"protocolnotstartederror":21,"protocolsuccesscallback":21,"prototyp":25,"provid":[0,1,2,3,4,6,7,9,10,13,14,15,16,17,20,21,22,24,25],"provis":25,"prune":[1,12,18],"prune_dens":10,"pruner":8,"pruner_typ":8,"pruning_end":10,"pruning_frequ":10,"pruning_on_cuda":8,"psp":3,"pth":[3,8,26],"purpos":[9,10,11,15,16,23,25],"pushd":2,"pwd":[2,3,7,16,20],"py":[2,15,16],"pyrenode3":7,"pyrenode_pkg":7,"python":[0,4,5,11,12,14,16,19,21,26,27],"python3":[0,2,5,26],"pythonpath":16,"pytorch":[0,2,3,4,12,15,16,18,25,26],"pytorch_coco":[4,25],"pytorch_pet_dataset":[4,8,25],"pytorch_pet_dataset_mobilenetv2_full_model":8,"pytorchanomalydetectioncnn":2,"pytorchanomalydetectionva":[2,3,26],"pytorchcocomaskrcnn":[4,16,25],"pytorchfullyconnect":16,"pytorchpetdatasetmobilenetv2":[4,8,15,25],"pytorchruntim":[4,8],"pytorchwrapp":[4,15,16],"qualiti":[0,1,7,8,9,10,11,12,14,15,19,21,25,26],"quant":2,"quantiz":[1,12,14,15,16,18,25],"quantization_aware_train":26,"quantize_model":16,"queri":22,"query_dict":22,"quick":[7,13],"quicker":2,"quickli":[17,25],"quit":1,"quota":22,"r0p1":3,"radar":26,"rais":[15,16,21,22,25,26],"ram":[0,2,8,15,20],"ram_size_kb":20,"ran":2,"random":[1,15],"random_dataset":[4,25],"randomizedclassificationdataset":[4,15,25],"randomizeddetectionsegmentationdataset":[4,25],"rang":[2,15,16],"rate":[0,1,3,9,15,20],"rather":25,"raw":[3,7,15,21,22],"re":[1,21],"reach":[15,21],"read":[3,9,14,15,17,21,25,26],"read_data_from_platforms_yaml":15,"read_io_specif":15,"read_platform":15,"readabl":[7,16],"readi":[3,15,21],"readm":7,"real":[1,11,15,25],"real_time_visu":[17,25],"realpath":[2,3],"realtimeclassificationvisu":15,"realtimedetectionvisu":[15,17],"realtimesegmentationvisu":15,"reason":[1,16],"recal":[0,26],"receiv":[0,2,14,15,16,20,21,23],"receive_data":21,"receive_messag":21,"recognit":7,"recommend":[5,11,25],"record":3,"rectangl":17,"recurs":[11,15,21],"redefin":15,"reduc":[1,2,8,9,10],"reduce_dataset":[26,27],"reduct":[8,9,10],"ref":0,"refer":[0,21],"regard":[3,7,16],"regardless":[15,25],"region":20,"regist":[15,20],"register_compon":16,"regular":[1,9,15,16,25],"reimplement":25,"reject":[2,21],"rel":[0,1],"relai":0,"relat":25,"releas":[3,11,25],"relev":21,"reli":21,"reload":3,"relu":[8,26],"relu6":8,"remain":[2,14,16],"remot":[0,11,12,15,17,22],"remov":[6,8,10,15,21,22],"remove_unoptimized_measurementsfil":15,"render":[0,3,9,15,25],"render_report":[0,25],"renod":[2,3,12,13,18,20,25],"renode_profiler_1kh4c4k5":26,"renode_profiler_94hvoct2":26,"renode_profiler_lzmvee3p":26,"renode_profiler_mxb0_nox":26,"renode_profiler_t9ere011":26,"renode_stat":5,"renode_uart_g1rgi17k":26,"renode_uart_jcxt6nck":26,"renode_uart_oxp8vw":26,"renode_uart_xofw4ov6":26,"renode_uart_zqw3t5u0":26,"reorder":15,"repeat":21,"repeatedli":15,"repl":[2,20,22,26],"replac":25,"repo":20,"reporesent":9,"report":[2,3,5,7,8,9,10,11,12,13,14,21,25],"repositori":[0,2,3,5,7,11,15,20,22],"repres":[0,2,3,4,8,10,15,16,17,20,25,26],"represent":[1,15],"representative_dataset":16,"reproduc":14,"request":[3,14,15,16,21],"request_block":21,"request_callback":21,"request_optim":[15,21],"request_process":[15,21],"request_retransmit":21,"requir":[0,1,4,5,6,7,8,9,10,11,14,15,16,20,21,22,23,25],"resc":[7,20,26],"resc_depend":[7,20,26],"reset":[3,20],"reshap":16,"resiz":1,"resnet50":16,"resolv":[15,22],"resolver_output_path":26,"resolver_template_path":26,"resourc":[9,12,13,14,15,16,23,25,26,27],"resource_manag":[4,15,16,22,25],"resourcemanag":[12,22],"resourceuri":[4,12,16,22,25],"respect":[8,15,16,24],"respond":21,"respons":[15,16,21],"rest":[14,24],"restart":14,"restrict":23,"result":[0,1,2,3,6,7,9,10,12,13,14,15,16,17,25],"resultpath":15,"retri":21,"retriev":15,"return":[0,2,4,6,14,15,16,17,20,21,22,25],"reus":1,"right":2,"risc":[7,20],"riscv":7,"riscv32":7,"rm":[2,3,7,20],"rmsprop":10,"ro":21,"roc":26,"rocm":[0,1],"root":[0,3,9,11,14,15,25,26,27],"ros2":[13,15,21],"ros2protocol":12,"ros2segmentationdataconvert":15,"rotat":1,"routin":[0,1,15,25],"row":3,"rst":[0,15,25],"rto":[2,3,12],"rule":[20,25],"run":[1,3,4,5,8,9,10,11,12,13,15,16,17,19,20,21,22,24,27],"run_ev":21,"run_event_block":21,"run_infer":[14,15],"run_loc":25,"run_renod":2,"run_single_step":15,"run_west_upd":2,"runnabl":0,"runner":[0,4,12,25,26,27],"runners_specif":15,"runtim":[0,2,4,6,8,9,12,14,18,19,20,21,22,24,25,26,27],"runtime_binary_path":[7,20,26],"runtime_build":[2,26],"runtime_cl":0,"runtime_init_log_msg":26,"runtime_init_timeout":26,"runtime_log_init_msg":20,"runtime_use_vm":[11,27],"runtimebuild":26,"runtimecl":0,"rv32":[7,20],"s7":20,"safe":21,"same":[1,3,5,9,14,15,16,17,21,22],"sampl":[0,1,6,8,11,12,13,15,16,17,21,25],"satisfi":4,"save":[0,1,2,3,5,6,9,14,15,16,17,21,22,25,27],"save_dataset_checksum":15,"save_io_specif":[15,16,25],"save_measur":[15,25],"save_model":[15,16],"save_model_path":[0,8,11,14,16,17,24,25,26,27],"save_to_onnx":15,"save_to_zip":[10,26],"scale":[15,16],"scan":15,"scenario":[0,1,2,3,4,5,6,8,9,11,13,14,16,17,19,20,24,25,26],"schedul":1,"schema":[3,11,15,16],"scheme":[3,9,12,15],"scope":19,"score":[16,17],"scratch":1,"screen":[15,25],"script":[0,2,3,4,5,6,7,9,12,13,14,15,16,17,20,24,26],"sdaccel":0,"sdk":[3,5,20],"seamless":[16,25],"seamlessli":25,"search":[1,2,13,15,16,25],"second":[15,19,21,26],"section":[0,2,3,5,9,10,13,16,18,23,26,27],"see":[2,3,9,14,15,16,21,22],"seed":[0,15],"seen":22,"segment":[1,12,15,16,18],"segmobject":16,"select":[0,1,2,3,7,21,24,25],"selector":21,"self":[15,16,21],"semant":1,"send":[0,7,14,15,17,21,25],"send_data":21,"send_messag":21,"sens":15,"sensit":[9,26,27],"sensor":[1,3,14,26],"sent":[7,14,15,21],"separ":[8,10,14,15,21,22],"sequenc":[1,3,10,14,17],"sequenti":[15,16],"seri":[2,3,15],"serial":[3,15,20,21,25],"serializ":15,"serv":[15,21],"server":[0,3,6,14,21,25,26],"serveract":[15,21],"serverdownloadcallback":[15,21],"serverstatu":[15,21],"serveruploadcallback":[15,21],"servic":21,"session":[15,21],"session_utilization_cpus_percent_avg_mean":24,"session_utilization_cpus_percent_avg_median":24,"session_utilization_cpus_percent_avg_std":24,"session_utilization_mem_percent_mean":24,"session_utilization_mem_percent_median":24,"session_utilization_mem_percent_std":24,"set":[1,2,3,4,6,7,9,10,11,15,16,17,19,20,21,22,24,25,26,27],"set_batch_s":15,"set_cache_dir":[15,22],"set_compiled_model_path":15,"set_input_typ":15,"set_max_cache_s":[15,22],"set_unoptim":15,"setup":[0,2,5,20],"setuptool":5,"sever":[0,4,9,11,16,25],"sgd":10,"sh":[2,3,5,20],"shape":[1,4,15,16,17],"share":[3,9,14,25],"short":11,"should":[0,1,3,5,9,14,15,16,17,20,21,22,24,25],"should_clos":[15,16],"show":[0,1,3,7,15,17],"shown":[11,25],"shutdown":[3,15,20],"side":[14,15,21],"sig_det":16,"sigmoid":26,"signal":[1,3,16,21],"signatur":16,"signific":[1,9,10,25],"significantli":[1,8,10],"sim":[20,22],"similar":[3,4,10,16,22,23,24],"similarli":22,"simpl":[9,16,21,25],"simplest":14,"simpli":[9,14,16,22],"simplifi":[0,9],"simul":[2,3,12,18,20,26],"simultan":21,"sinc":[3,9,15,16,21,24,25],"singl":[3,9,12,15,17,21,24,25],"singleton":15,"singular":24,"sit":21,"site":26,"size":[0,2,3,8,9,10,11,14,15,17,20,22,27],"skip":[0,2,3,9],"skip_model_size_check":15,"slightli":1,"small":[1,9,10,25],"smaller":[1,9,26,27],"smallest":8,"snippet":16,"so":[0,1,2,3,11,14,15,17,21,23,27],"socket":21,"softmax":26,"solut":[7,15,21],"solv":15,"some":[0,1,4,9,14,15,16,21,22,25],"someth":25,"sourc":[0,1,3,5,7,11,15,17,20,25,26,27],"space":[2,16,22,23],"span":21,"spars":[10,25],"sparsiti":[8,10],"spec":[6,15,16,17],"speci":[0,14],"special":[1,11],"specif":[0,1,2,4,7,8,9,11,12,13,15,16,17,19,22,23,25],"specifi":[0,1,2,3,4,6,7,8,9,10,11,14,15,16,17,20,21,22,23,24],"speech":25,"speech_to_text":25,"speed":[3,8,10,11,26],"spend":2,"sphinx":[0,9],"split":[0,1,15,22],"split_fraction_test":[0,2,3,15,16,26,27],"split_fraction_v":[0,15,26,27],"split_se":[0,2,3,15,16,26,27],"springbok":[7,20,22],"springbokriscv32":20,"sram":20,"stack":[12,13,15,21],"stackvm":0,"stage":[0,20,25],"stai":9,"standalon":21,"standard":[2,15,16,21,22,24,26,27],"start":[1,3,5,6,7,11,13,14,15,20,21,25,26],"start_act":15,"start_sending_log":[15,21],"stat":[15,21],"state":[3,15,21],"statement":16,"static":[4,15],"statisct":15,"statist":[0,8,12,15,21,27],"statu":[15,21],"std":[15,16],"stem":15,"step":[1,2,3,7,13,14,15,16,18,25],"stick":16,"still":[15,25],"stimuli":3,"stm32":5,"stm32f746g":20,"stm32f746g_disco":[5,7,20],"stop":[1,15,16,21],"stop_sending_log":[15,21],"storag":[10,14],"store":[0,2,3,6,7,9,10,14,15,17,19],"str":[4,15,16,21,22],"straightforward":1,"strategi":24,"stratifi":15,"stream":[15,21],"strict":11,"string":[4,15,17,21,22],"strip":[7,10],"struct":21,"structur":[0,1,2,3,4,12,14,15,16,18],"subclass":15,"subcommand":[14,20,25],"subdivis":15,"subject":14,"submodul":[15,20,25],"subset":[1,9,15],"substanti":10,"succe":21,"succeed":[15,21],"success":[2,3,15,21,26],"success_callback":21,"successfulli":[1,3,15,21],"sudo":25,"suffix":[15,22],"suggest":[8,10,23,25],"suitabl":15,"sum":16,"summar":25,"summari":[8,9,10,17],"super":16,"support":[0,3,4,8,11,12,14,15,21,22,25],"supported_op":16,"supportstatu":15,"suppos":[1,15,21],"suppress":21,"sure":[2,4,15,16,21],"surround":15,"swclk":3,"swd":3,"swdio":3,"switch":[11,25],"sy":23,"symbol":7,"sysbu":20,"system":[2,3,14,15,23],"systemstatscollector":15,"systemstatsmeasur":15,"t":[2,3,15,20,21],"tabl":9,"tag":[0,15],"tagmeasur":15,"tagnam":15,"take":[0,2,9,10,14,15,21,22,25],"taken":[3,14,15],"tanh":[2,26],"tapnam":3,"tar":[0,9,11,14,24,25,27],"target":[1,2,3,7,9,11,12,14,15,20,21,24,25,26,27],"target_attr":27,"target_device_context":[11,27],"target_device_context_id":[0,27],"target_host":[0,11,27],"target_microtvm_board":27,"target_spars":10,"target_spec":16,"targetnam":3,"task":[0,2,9,11,15,21,25,26,27],"tck":3,"tcp":[14,15,21,25],"tdi":3,"tdo":3,"teacher":1,"techniqu":[10,25],"technologi":[15,21],"telemetri":3,"tell":[0,3,11,16],"templat":25,"tensor":[0,1,15,16],"tensorflow":[0,2,4,5,12,14,15,16,18,25],"tensorflow_clust":[4,10,25],"tensorflow_imagenet":[4,25],"tensorflow_model_optim":25,"tensorflow_optim":4,"tensorflow_pet_dataset":[0,4,9,10,14,15,16,24,25,27],"tensorflow_pet_dataset_mobilenetv2":[0,9,10,14,16,24,25,27],"tensorflow_prun":[4,10,25],"tensorflowclusteringoptim":[4,10,25],"tensorflowconvers":16,"tensorflowdatasetmobilenetv2":15,"tensorflowimagenet":[4,25],"tensorflowlitecompil":16,"tensorflowoptim":4,"tensorflowpetdatasetmobilenetv2":[0,4,9,10,14,15,16,24,25,27],"tensorflowpruningoptim":[4,10,25],"tensorflowwrapp":[4,15],"tensorrt":[0,1],"term":25,"termin":16,"test":[1,2,3,5,7,8,9,10,11,12,14,15,21,23,24,25,26,27],"test_epoch":15,"test_fract":15,"test_indic":15,"test_infer":15,"test_subset_len":15,"tester":0,"text":25,"tf":[10,16],"tflite":[0,2,3,4,6,7,12,14,16,18,24,25,26],"tflite_builtins_int8":16,"tflite_magic_wand":[4,7,25],"tflite_model":16,"tflite_person_detect":[4,25],"tflitecompil":[0,2,3,4,9,14,15,20,24,25,26],"tfliteconvert":16,"tflitemicro":5,"tfliteruntim":[0,4,15,16,24,25,26],"th":15,"than":[2,3,11,15,22,24,25],"thei":[0,4,10,14,15,16,17,19,23,25],"them":[2,4,6,7,9,10,14,15,16,21,25],"therefor":21,"thi":[0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,21,22,23,24,25,26,27],"thing":[14,16,21],"those":[1,10,15,16,22],"though":0,"thread":[3,15,21],"three":[10,16,17],"through":[1,10,14,15,21,25],"throughout":[0,25],"time":[0,1,2,3,8,9,11,15,21,25],"time_limit":[2,15,16],"timemeasur":15,"timeout":[15,21,26],"timer":3,"timestamp":[3,15,19,21],"titl":9,"tk":5,"tm":3,"tmp":[7,26],"to_json":15,"to_next_block":15,"to_previous_block":15,"togeth":15,"too":[0,2,14,26],"tool":[3,6,9,14,25],"toolchain":20,"toolkit":11,"top":[6,27],"top_5_accuraci":24,"torch":[0,2,3,4,8,14,16,25,26],"total":[22,26],"total_spars":8,"toward":25,"track":15,"train":[2,7,10,12,13,15,16,18,25,27],"train_indic":15,"train_model":15,"train_subset_len":15,"train_test_split_represent":15,"trainabl":26,"trained_model_metr":15,"training_data":15,"training_epoch":15,"training_start_tim":15,"training_step":8,"tranmsiss":21,"transfer":[0,1],"transform":1,"transmiss":21,"transmission_callback":21,"transmit":21,"transmit_block":21,"transmitt":21,"tree":[5,20],"tri":[20,21],"trigger":[2,15,20,21],"tripl":7,"true":[2,3,4,7,8,10,14,15,16,21,26,27],"truth":[7,15,19],"ttyacm0":3,"ttyusb0":3,"tune":[1,8,10,16,24,25],"tupl":[15,16,17,21],"tutori":[5,7,10],"tvm":[0,2,3,4,5,12,14,15,16,18,20,24,25],"tvm_library_path":11,"tvmcompil":[0,2,3,4,9,11,14,15,20,24,25,27],"tvmdarknetcocoyolov3":[0,4,15,25],"tvmruntim":[0,4,11,14,15,24,25,27],"two":[3,6,8,9,10,11,14,15,21,25],"type":[0,2,3,4,5,6,7,8,9,10,11,14,15,20,21,22,24,25,26,27],"type1":16,"type2":16,"typic":[1,13],"u":[7,9,25],"uart":[2,3,7,14,20,21,25,26],"uart0":26,"uart2":26,"uart_baudr":[20,26],"uart_log":26,"uart_log_baudr":[20,26],"uart_log_port":26,"uart_port":[3,7,26],"uart_port_wildcard":20,"uartprotocol":[7,12,26],"uint8":[16,25],"unabl":3,"unchang":9,"uncom":2,"undefin":15,"under":[2,3,6,7,14,16],"undergo":1,"underli":[14,15,21,25],"understand":[3,16],"unfrozen":1,"unifi":25,"uniform":21,"uninstal":11,"union":15,"uniqu":[15,17,20],"univers":1,"unknown":15,"unmatch":20,"unmodifi":15,"unnecessari":10,"unoptim":[15,21],"unoptimized_measurementspath":15,"unoptimized_model":21,"unprompt":21,"unstructur":[12,18],"unsupport":11,"until":[15,21,22],"unus":9,"up":[2,3,6,7,16,20,25,26,27],"updat":[1,2,5,15,16,21,22],"update_automl_default":15,"update_automl_rang":15,"update_io_spec":16,"update_measur":15,"upgrad":5,"upload":[0,15,21],"upload_input":[15,21],"upload_input_callback":[15,21],"upload_io_specif":[15,21],"upload_iospec_callback":[15,21],"upload_model":[15,21],"upload_model_callback":[15,21],"upload_optim":[15,21],"upload_optimizers_callback":[15,21],"upload_output":15,"upload_runtim":[15,21],"upload_runtime_callback":[15,21],"upload_stat":15,"upload_unoptimized_model_callback":[15,21],"uploading_input":[15,21],"uploading_iospec":[15,21],"uploading_model":[15,21],"uploading_optim":[15,21],"uploading_runtim":[15,21],"uploading_unoptimized_model":15,"upper":[2,16],"uri":[9,12,15],"uri_or_path":15,"url":[11,15,20,22],"us":[1,2,3,4,8,10,11,12,13,15,17,19,20,21,22,23],"usabl":15,"usag":[0,7,8,9,12,13,14,15,16,19],"usb":20,"use_cubla":11,"use_cuda":[2,11],"use_cudnn":11,"use_default_excepthook":23,"use_fp16_precis":27,"use_int8_precis":27,"use_llext":26,"use_llvm":11,"use_micro":11,"use_model":[2,15,16],"use_tensorrt":27,"use_tf_select_op":26,"user":[2,14,15,16,21,22,25],"usr":[3,11,27],"usual":[1,2,9,15,16,21,25],"util":[0,1,4,5,9,14,15,16,19,21,22,25],"v":[0,2,3,4,7,20,22,25],"v0":[11,22],"v2":3,"v2024_10":3,"v6":25,"vae":[2,26],"vae_cat":3,"val":0,"val_fract":15,"val_subset_len":15,"valdiat":0,"valid":[1,6,15,16,17,23],"validate_resources_vers":15,"validation_epoch":15,"validationerror":15,"valu":[1,2,3,4,5,8,10,14,15,16,20,22,23,26,27],"valueerror":[15,21],"valuetoadd":15,"vari":2,"variabl":[7,12,13,15,16,17,20,22,24],"variant":[3,11],"variat":3,"varieti":9,"variou":[0,1,9,13,14,15,16,17,20,22,25],"vec_controlblock":20,"vector":[7,9,14,15,25],"venv":[2,3,5,20,26],"venv_dir":[2,26],"ver":[2,26,27],"verbos":[0,3,4,5,6,7,11,14,23,25,27],"veri":[1,10,11,25],"verif":15,"verifi":[1,4],"verify_dataset_checksum":15,"versa":[15,25],"versatil":25,"version":[2,3,5,10,11,14,15,19,23],"via":[7,12,13,14,15,16,20,25],"vice":[15,25],"video":[0,1,15,17],"video0":[0,17],"video_file_path":[0,17],"videox":0,"view":14,"viewer_height":17,"viewer_width":17,"violin":26,"virtual":[3,5,7,15,23],"virtualmachin":0,"visibl":[9,14],"vision":[11,25],"visual":[0,9,12,15,17,18,25],"visual_wake_words_dataset":[4,25],"visualwakewordsdataset":[4,25],"vm":[0,7],"vmfb":7,"voic":1,"vpi":0,"vram":8,"vulkan":0,"vv":[0,4,25],"w":[2,3,7,20],"wa":[0,3,15,16,21,22,26,27],"wai":[1,3,13,14,16,22,25],"wait":[15,21],"wait_send":21,"waiting_for_cli":15,"wand":7,"want":[4,9,11,16],"warn":[0,4],"wast":2,"watchpoint":3,"wb":16,"we":[0,4,5,8,9,10,11,14,15,16,17,21,25],"web":6,"webgpu":0,"weight":[0,1,9,10,14,16,25],"weights_init":16,"well":[2,3,7,9,15,21],"were":[15,20,21],"west":[2,3,5,26],"wget":[3,5],"what":[0,9,15,21,25],"wheel":5,"when":[0,4,6,7,8,10,14,15,16,21],"whenev":15,"where":[0,2,3,4,6,9,11,15,16,20,21,22],"wherea":3,"whether":[0,3,6,11,15,16,21,24],"which":[0,2,3,4,6,7,8,9,10,11,13,14,15,16,17,21,22,23,24,25],"while":[6,9,19,21],"whole":[15,16,21],"wide":1,"width":[0,4],"window_s":[3,16,26],"wise":[0,15,21,25],"with_nam":15,"with_stem":15,"with_suffix":15,"within":[3,24],"without":[0,1,7,8,9,10,15,21],"won":21,"work":[0,3,6,7,9,13,15,16,19,21,26,27],"workflow":[6,21],"workspac":[2,3,5,6,7,12,16],"worth":9,"would":[5,15,21,22,24,25],"wrap":[0,15,16],"wrapper":[3,9,11,15,16,17,21],"write":[15,16,21,26],"write_imag":[3,20],"writedoubleword":20,"written":[3,20],"wrote":3,"x":[0,3,15,16,26],"x86":[9,14],"x_test":15,"x_train":15,"xavier_uniform_":16,"xor":21,"xpsr":3,"xxd":5,"xz":5,"y":[3,5,11,15,16,26],"y_test":15,"y_train":15,"yaml":[2,20],"yet":[3,25],"yield":[15,16],"yml":[2,3,5,11,16,20,26,27],"yolact":[4,11,25],"yolactwithpostprocess":[4,25],"yolactwrapp":4,"yolo_wrapp":4,"yolov3":[0,15,25],"yolov4":[4,16,17,25],"yolowrapp":4,"you":[0,2,3,6,8,9,10,11,14,15,16,17,21,22,25],"zenodo":3,"zephyr":[2,3,12,15,18,21,26],"zephyr_bas":20,"zephyr_build_path":[3,26],"zephyr_header_templ":27,"zephyr_llext_source_templ":27,"zephyrplatform":[2,3,15,20,26],"zephyrruntimebuild":[2,26],"zero":[8,10,16],"zero_point":[15,16],"zeros_":16,"zip":[7,16],"zve32f":7,"zve32x":7,"zvl512b":7},"titles":["Using Kenning via command line arguments","Deep Learning deployment stack","Generating anomaly detection models for the MAX32690 Evaluation Kit with AutoML","Anomaly detection model training and deployment on the MAX32690 Evaluation Kit","Displaying information about available classes","Evaluating models on hardware using Kenning Zephyr Runtime","Visualizing Kenning data flows with Pipeline Manager","Bare-metal IREE runtime simulated using Renode","Structured pruning for PyTorch models","Model quantization and compilation using TFLite and TVM","Unstructured Pruning of TensorFlow Models","Optimizing and comparing instance segmentation models","Kenning","Introduction","Defining optimization pipelines in Kenning","Kenning API","Developing Kenning blocks","Creating applications with Kenning","Kenning gallery of use cases","Kenning measurements","Kenning platforms","Kenning protocols","Kenning resources","Kenning environment variables","Choosing optimal optimization pipeline","Kenning","Sample AutoML report","Sample autogenerated report"],"titleterms":{"0":26,"1234_12_5":26,"1234_21_5":26,"1234_29_1":26,"1234_29_5":26,"1234_3_5":26,"6666666666666665":26,"In":0,"about":[0,4],"access":[22,26],"accuraci":26,"ad":25,"adjust":16,"an":[2,3],"anomali":[2,3],"anomaly_detection_dataset":3,"anomalydetectiondataset":3,"apach":9,"api":15,"app":2,"applic":17,"argument":[0,4,16],"argumentshandl":15,"autocomplet":0,"autogener":27,"autom":9,"automl":[2,15,16,26],"avail":[0,4,21],"averag":27,"backend":5,"bare":7,"benchmark":9,"block":16,"board":20,"build":[5,11,27],"bytesbasedprotocol":21,"cach":22,"callback":15,"case":18,"checksum":21,"choos":24,"chosen":2,"class":[0,3,4,16],"classif":[26,27],"cli":22,"cluster":10,"command":[0,22,26,27],"commun":21,"compar":[3,5,11],"comparison":[9,11,26],"compat":17,"compil":[1,9,14,27],"compon":16,"config":24,"control":21,"core":16,"counter":26,"cpu":[11,27],"creat":[7,17],"cuda":11,"custom":22,"data":[6,15],"dataconvert":15,"dataprovid":15,"dataset":[1,3,15,27],"deep":1,"defin":[14,16],"definit":20,"deploi":3,"deploy":[1,3,15],"descript":3,"detail":[24,26],"detect":[2,3],"develop":[2,3,16],"devic":14,"directli":25,"displai":[0,4],"enabl":11,"environ":[2,3,5,9,23],"evalu":[2,3,5,7,14],"exampl":[17,21],"except":26,"execut":[11,17,26],"experi":[8,10,11],"f1":26,"flag":21,"flash":3,"flow":[2,6,15,16,21],"framework":[0,9,14],"from":1,"galleri":18,"gener":[0,2,20,26,27],"gpu":11,"hardwar":[0,5],"i":[15,16],"implement":[15,16,17,21,25],"infer":[0,9,26,27],"info":[4,11],"inform":[0,4,26,27],"input":16,"instal":[3,5,6,11,25],"instanc":11,"instruct":[11,26],"interfac":0,"introduct":[13,25],"io":17,"ire":7,"its":14,"json":[14,17,26,27],"ken":[0,3,4,5,6,7,12,14,15,16,17,18,19,20,21,22,23,25],"kenning_cache_dir":23,"kenning_disable_io_valid":23,"kenning_docs_venv":23,"kenning_enable_all_log":23,"kenning_max_cache_s":23,"kenning_use_default_excepthook":23,"kenningflow":[15,16,17],"kenningprotocol":21,"kit":[2,3],"learn":1,"librari":25,"line":0,"list":4,"lite":[3,9],"load":4,"local":27,"magic":5,"manag":6,"map":17,"max32690":[2,3],"mean":26,"measur":[0,15,19,26],"mechan":15,"memori":[26,27],"messag":21,"messagetyp":21,"metadata":16,"metal":7,"method":[15,16,21],"metric":[19,26,27],"micro":3,"microtvm":[3,5],"model":[0,1,2,3,5,7,8,9,10,11,14,15,16,26,27],"modelwrapp":[15,16],"modul":[3,25],"name":17,"nativ":[9,14],"necessari":3,"networkprotocol":21,"new":[16,25],"non":17,"note":[0,2,3,4,14,15,16,17,20,21,26,27],"o":[15,16],"onnx":11,"onnxconvers":15,"open":11,"optim":[1,9,11,14,15,24],"option":[3,9,10],"output":[16,24],"outputcollector":15,"overview":[15,26],"paramet":26,"payload":21,"perform":[0,3,19,26,27],"peripher":26,"pet":27,"pip":25,"pipelin":[6,14,24],"platform":[15,20],"plot":26,"prepar":[1,2,3,5,9],"process":15,"protocol":[15,21],"prune":[8,10],"python":25,"pytorch":8,"qualiti":[3,27],"quantiz":[2,9],"remot":14,"renod":[5,7,26],"report":[0,15,26,27],"repositori":25,"resourc":22,"resourcemanag":15,"resourceuri":15,"result":[5,8,26],"ros2protocol":21,"rto":20,"run":[0,2,6,7,14,25],"runner":[15,16,17],"runtim":[3,5,7,11,15,16,17],"sampl":[2,3,26,27],"scenario":[7,21],"scheme":22,"score":26,"script":25,"segment":11,"server":15,"setup":[7,8,10,11],"simul":7,"singl":14,"size":[21,26],"softwar":3,"specif":[3,14,20,21,24],"speed":9,"stack":1,"standard":17,"statist":26,"structur":[8,17,21,25],"summari":26,"support":[5,16,20],"target":0,"tensorflow":[3,9,10,27],"test":0,"tflite":[5,9],"time":[26,27],"train":[0,1,3,9,14,26],"transmissionflag":21,"tutori":25,"tvm":[9,11,27],"type":[16,17],"uartprotocol":21,"unimpl":16,"unstructur":10,"up":9,"uri":22,"us":[0,5,6,7,9,14,16,18,25,26,27],"usag":[25,27],"vae":3,"valu":21,"variabl":23,"via":0,"visual":6,"wand":5,"warn":[15,16],"work":25,"workspac":26,"zephyr":[5,20]}})